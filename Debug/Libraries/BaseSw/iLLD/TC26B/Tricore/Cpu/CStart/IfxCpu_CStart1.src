	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99754241"
	.compiler_invocation	"ctc --dep-file=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart\\.IfxCpu_CStart1.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0 -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\CODE -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Infra -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Infra\\Platform -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Infra\\Platform\\Tricore -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Infra\\Sfr -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Service -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Service\\CpuGeneric -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\seekfree_libraries -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\seekfree_libraries\\common -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\seekfree_peripheral -IC:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\USER -g2 --make-target=Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart\\IfxCpu_CStart1.o -t0 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O0 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart\\IfxCpu_CStart1.src ..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart\\IfxCpu_CStart1.c"
	.compiler_name		"ctc"
	;source	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart\\IfxCpu_CStart1.c'

	
$TC16X
	

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	     1  /**
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	     2   * \file IfxCpu_Cstart1.c
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	     3   * \brief This file contains the Core startup sequence for Cpu1.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	     4   * \version iLLD_1_0_1_11_0
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	     5   * \copyright Copyright (c) 2012 Infineon Technologies AG. All rights reserved.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	     6   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	     7   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	     8   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	     9   *                                 IMPORTANT NOTICE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    10   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    11   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    16  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    17  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    19  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    25   * Software is furnished to do so, all subject to the following:
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    26  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    32   * language processor.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    33  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    41  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    42   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    43   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    44   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    45  /*******************************************************************************
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    46  **                      Includes                                              **
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    47  *******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    48  #include "Ifx_Cfg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    49  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    50  #include "Scu/Std/IfxScuWdt.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    51  #include "Cpu/Std/IfxCpu.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    52  #include "Cpu/CStart/IfxCpu_CStart.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    53  #include "IfxScu_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    54  #include "IfxCpu_reg.h"
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    55  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    56  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    57  /*                           Macros                                            */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    58  /******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    59  /** \brief Configuration for cache enable.
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    60   *
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    61   */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    62  #ifndef IFX_CFG_CPU_CSTART_ENABLE_TRICORE1_PCACHE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    63  #   define IFX_CFG_CPU_CSTART_ENABLE_TRICORE1_PCACHE (1)  /**< Program Cache enabled by default*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    64  #endif
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    65  #ifndef IFX_CFG_CPU_CSTART_ENABLE_TRICORE1_DCACHE
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    66  #   define IFX_CFG_CPU_CSTART_ENABLE_TRICORE1_DCACHE (1)  /**< Data Cache enabled by default*/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    67  #endif
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    68  /*******************************************************************************
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    69  **                      Imported Function Declarations                        **
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    70  *******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    71  IFXCOMPILER_COMMON_LINKER_SYMBOLS()
		 .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    72  IFXCOMPILER_CORE_LINKER_SYMBOLS(1)
		 .extern __USTACK1

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    73  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    74  IFX_EXTERN void core1_main(void);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    75  #if defined(__TASKING__)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    76  __asm("\t .extern core1_main");
		 .extern core1_main
	.sdecl	'.text.IfxCpu_CStart1._Core1_start',code,cluster('_Core1_start')
	.sect	'.text.IfxCpu_CStart1._Core1_start'
	.align	2
	
	.global	_Core1_start

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    77  #endif
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    78  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    79  /*******************************************************************************
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    80  **                      Private Constant Definitions                          **
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    81  *******************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    82  #define IFXCSTART1_PSW_DEFAULT     (0x00000980u)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    83  #define IFXCSTART1_PCX_O_S_DEFAULT (0xfff00000u)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    84  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    85  /*********************************************************************************
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    86  * - startup code
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    87  *********************************************************************************/
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    88  #if defined(__HIGHTEC__)
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    89  #pragma GCC optimize ("-O2")
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    90  #endif
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    91  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    92  void _Core1_start(void)
; Function _Core1_start
.L36:
_Core1_start:	.type	func

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    93  {
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    94      uint32 pcxi;
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    95      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[1]);
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf003610c)
.L52:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    45   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    46   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    47   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    48   * \ingroup IfxLld_Scu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    49   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    50   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    51   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    52   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    53   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    54   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    55   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    56   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    57   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    58  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    59  #ifndef IFXSCUWDT_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    60  #define IFXSCUWDT_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    61  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    62  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    63  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    64  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "Cpu/Std/Ifx_Types.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    69  #include "IfxScu_bf.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    70  #include "IfxScuWdt.asm.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    71  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    72  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    73  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    74  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    76  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    77  /** \brief Endinit operation Timeout counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    78   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    79  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    80  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    82  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    83  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    84  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    85  /** \brief Configuration structure for Scu Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    86   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    87   * Safety WDT registers defined in IfxScuWdt.h file.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    88   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    89  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    90  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    91      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    92      uint16            reload;                              /**< \brief WDT reload value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    93      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    97      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    98      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    99      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   100  } IfxScuWdt_Config;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   101  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   102  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   103   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   104  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   106  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   107  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   108  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   109  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   110   *   This API initialize the ScuWdt configuration structure to default values, these default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   111   *   values are for software specific, not necessarily hardware reset values.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   112   *   User must use this API call before IfxScuWdt_Init API call
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   113   * \param config ScuWdt configuration structure to be initialized
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   114   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   115   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   116  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   117  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   118  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   119   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   120   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   121   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   122   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   123   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   124   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   125   * \param wdt reference to register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   126   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   127   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   128   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   129  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   130  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   131  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   132   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   133   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   134   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   135   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   136   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   137   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   138   * \param wdt reference to register map of Safety WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   139   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   140   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   141   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   142  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   143  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   145  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   146  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   147   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   148  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   150  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   151  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   152  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   153  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   154   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   155   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   156   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   157   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   158   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   159   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   160   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   161   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   162   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   163   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   164   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   165  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   166  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   167  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   168   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   169   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   170   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   171   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   172   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   173   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   174   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   175   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   176   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   177   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   178  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   179  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   180  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   181   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   182   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   183   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   184   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   185   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   186   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   187   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   188   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   189   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   190  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   191  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   192  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   193   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   194   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   195   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   197   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   198   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   199   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   201  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   203  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   204  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   205  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   206  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   207  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   208   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   209   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   210   *   User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   211   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   212   *   ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   213   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   217  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   219  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   220   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   221   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   222   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   223   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   224   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   225   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   227   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   228   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   229  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   230  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   231  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   232   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   233   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   234   *   User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   235   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   240  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   242   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   243   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   244   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   245   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   246   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   247   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   248   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   249  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   250  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   251  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   252  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   253  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   254   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   255  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   259  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   262   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   263   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   264   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   265   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   266   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   267   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   268   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   269  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   270  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   271  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   278   * \return Endinit status for the Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   279   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   280  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   281  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   282  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   283   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   284   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   285   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   286   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   287   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   288   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   289   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   290  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   291  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   292  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   293  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   294  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   295  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   296  /** \brief SCUWDT API to change CPU Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   297   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   298   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   299   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   300   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   301   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   302   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   303   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   304  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   305  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   306  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   307   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   308   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   309   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   311   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   316  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \brief SCUWDT API to change Safety Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   318   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   319   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   320   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   321   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   322   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   323   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   324   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   325  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   326  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   327  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   328   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   329   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   330   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   331   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   333   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   334   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   335   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   336  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   337  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   338  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   339   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   340   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   341   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   342   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   343   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   347  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   351   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   352   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   353   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   357  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   358  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   359   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   360   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   361   *   periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   362   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   363   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   366  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   368  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   370   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   371   * periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   372   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   373   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   374   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   375   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   376  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   377  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   378  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   379   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   380   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   381   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   382   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   383   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   384   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   385  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   386  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   387  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   388   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   389   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   390  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   391  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   392  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   393   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   394   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   395   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   396   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   397   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   398   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   399  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   400  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   401  /** \brief SCUWDT API to service CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   402   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   403   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   404   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   405   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   406   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   407   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   408   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   409  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   410  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   411  /** \brief SCUWDT API to service Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   412   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   413   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   414   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   415   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   416   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   417   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   418   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   419  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   420  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   421  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   422  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   423  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   424  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   425  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   426  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   427  /** \brief Enables the watchdog functionality with debugger connected,\n
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   428   * debug interface will also be enabled, if not enabled already.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   429   * \return Status, Success = 0, Failure = 1.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   430   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   431  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   432  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   433  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   434  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   435  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   436  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   437  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   438  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   440      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   441          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   442          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   443                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   444                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   445                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   446      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   447  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   448      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   449      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   450                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   451                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   452                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   453  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   454      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   456      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   457  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   458  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   459  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   460  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   461  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   462      if (SCU_WDTS_CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   463      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   464          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   465          SCU_WDTS_CON0.U = (1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   466                            (0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   467                            (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   468                            (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   469      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   470  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   471      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   472      SCU_WDTS_CON0.U = (0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   473                        (1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   474                        (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   475                        (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   476  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   477      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   478      while (SCU_WDTS_CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   479      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   480  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   481  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   482  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   483  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   484  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   485      uint16 password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   486  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   487      /* Read Password from CON0 register
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   488       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   489       * to toggle them before returning password */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   490      password  = watchdog->CON0.B.PW;
	ld.w	d15,[a15]
	extr.u	d15,d15,#2,#14
.L131:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   491      password ^= 0x003F;
	xor	d1,d15,#63
.L132:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   493      return password;      (inlined)
	j	.L2

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   494  }      (inlined)
.L2:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    96  getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[1]);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    97  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    98      IFX_CFG_CPU_CSTART_PRE_C_INIT_HOOK(1);  /*Test Stack, CSA and Cache */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	    99  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   100      /* Load user stack pointer */
	 movh.a	 sp,#@his(__USTACK1)
 lea	 sp,[sp]@los(__USTACK1)
.L164:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   101      __setareg(sp, __USTACK(1));
	dsync
.L165:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   102      __dsync();
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   103  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   104      /* Set the PSW to its reset value in case of a warm start,clear PSW.IS */
	mov	d15,#2432
.L166:
	mtcr	#65028,d15
	isync
.L167:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   105      __mtcr(CPU_PSW, IFXCSTART1_PSW_DEFAULT);    /* 0x00000980 */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   106  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   107      /* Set the PCXS and PCXO to its reset value in case of a warm start */
	mfcr	d15,#65024
.L134:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   108      pcxi  = __mfcr(CPU_PCXI);
	insert	d15,d15,#0,#0,#20
.L168:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   109      pcxi &= IFXCSTART1_PCX_O_S_DEFAULT; /*0xfff00000; */
	mtcr	#65024,d15
	isync
.L169:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   110      __mtcr(CPU_PCXI, pcxi);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   111  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   112      /*enable program cache */
	mov	d2,#1
.L58:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   974      if (enable)      (inlined)
	jeq	d2,#0,.L3
.L64:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   787  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   788  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   789  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   790  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   791      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   792  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   793  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   794  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   795  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   796  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   797      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   798  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   799  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   800  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   801  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   802  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   803      Ifx_CPU_CCNT ccnt;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   804  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   805      if (address == CPU_CCNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   806      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   807          ccnt.U = __mfcr(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   808      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   809      else if (address == CPU_ICNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   810      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   811          ccnt.U = __mfcr(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   812      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   813      else if (address == CPU_M1CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   814      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   815          ccnt.U = __mfcr(CPU_M1CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   816      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   817      else if (address == CPU_M2CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   818      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   819          ccnt.U = __mfcr(CPU_M2CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   820      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   821      else if (address == CPU_M3CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   822      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   823          ccnt.U = __mfcr(CPU_M3CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   824      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   825  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   826      return ccnt.B.CountValue;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   827  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   828  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   829  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   830  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   831  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   832      Ifx_CPU_CCNT ccnt;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   833  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   834      if (address == CPU_CCNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   835      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   836          ccnt.U = __mfcr(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   837      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   838      else if (address == CPU_ICNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   839      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   840          ccnt.U = __mfcr(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   841      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   842      else if (address == CPU_M1CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   843      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   844          ccnt.U = __mfcr(CPU_M1CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   845      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   846      else if (address == CPU_M2CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   847      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   848          ccnt.U = __mfcr(CPU_M2CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   849      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   850      else if (address == CPU_M3CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   851      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   852          ccnt.U = __mfcr(CPU_M3CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   853      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   854  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   855      return ccnt.B.SOvf;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   856  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   857  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   858  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   859  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   860  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   861      uint32  k;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   862      uint32  nxt_cxi_val = 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   863      uint32 *prvCsa      = 0U;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   864      uint32 *nxtCsa      = csaBegin;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   865      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   866  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   867      for (k = 0; k < numOfCsa; k++)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   868      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   869          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   870  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   871          if (k == 0)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   872          {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   873              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   874          }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   875          else
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   876          {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   877              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   878          }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   879  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   880          if (k == (numOfCsa - 3U))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   881          {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   882              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   883          }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   884  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   885          prvCsa  = (uint32 *)nxtCsa;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   886          nxtCsa += 16;           /* next CSA */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   887      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   888  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   889      *prvCsa = 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   890  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   891  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   892  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   893  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   894  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   895      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   896      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   897          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   898          Ifx_CPU_PCON1 pcon1;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   899          pcon1.U       = __mfcr(CPU_PCON1);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   900          pcon1.B.PCINV = 1;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   901          __mtcr(CPU_PCON1, pcon1.U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   902          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   903      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   904  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   905  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   906  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   907  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   908  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   909      uint8 segment = (uint32)address >> 24;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   910      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   911  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   912  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   913  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   914  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   915  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   916      Ifx_CPU_CCTRL cctrl;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   917      cctrl.U    = __mfcr(CPU_CCTRL);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   918      /*Disable the counters */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   919      cctrl.B.CE = 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   920      __mtcr(CPU_CCTRL, cctrl.U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   921  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   922      /* reset the counters */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   923      __mtcr(CPU_CCNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   924      __mtcr(CPU_ICNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   925      __mtcr(CPU_M1CNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   926      __mtcr(CPU_M2CNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   927      __mtcr(CPU_M3CNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   928  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   929      /*Enable the counters, set the counter mode */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   930      cctrl.B.CE = 1;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   931      cctrl.B.CM = mode;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   932      __mtcr(CPU_CCTRL, cctrl.U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   933  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   934  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   935  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   936  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   937  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938      if (enabled != FALSE)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   939      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   940          __enable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   941      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   942  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   943  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   944  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   945  IFX_INLINE void IfxCpu_setDataCache(boolean enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   946  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   947      uint32 coreIndex   = IfxCpu_getCoreIndex();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   948      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   949      /*PCACHE enable steps */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   950      {                           /* Step 1: Set PCBYP to 0 if cache is enabled */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   951          IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   952          Ifx_CPU_DCON0 dcon0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   953          dcon0.U       = 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   954          dcon0.B.DCBYP = enable ? 0 : 1; /*depending on the enable bypas bit is reset/set */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   955          __mtcr(CPU_DCON0, dcon0.U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   956          IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   957      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   958      /* Step 2: Call Isync */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   959      __isync();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   960  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   961  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   962  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   963  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   964  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   965      Ifx_CPU_CCTRL cctrl;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   966      cctrl.U    = __mfcr(CPU_CCTRL);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   967      cctrl.B.CE = enable;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   968      __mtcr(CPU_CCTRL, cctrl.U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   969  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   970  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   971  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   972  IFX_INLINE void IfxCpu_setProgramCache(boolean enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   973  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   974      if (enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   975      {                           /* Step 3: Initiate invalidation of current cache contents if any */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   976          Ifx_CPU_PCON1 pcon1;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   977          pcon1.U       = 0;
	mov	d15,#0
.L135:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   978          pcon1.B.PCINV = 1;
	or	d15,#1
.L170:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   979          __mtcr(CPU_PCON1, pcon1.U);
	mtcr	#37380,d15
	isync

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   974      if (enable)      (inlined)
.L3:
	mfcr	d15,#65052
.L136:
	and	d3,d15,#7
.L171:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;      (inlined)
	j	.L4

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  }      (inlined)
.L4:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   980      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   981  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   982      uint32 coreIndex   = IfxCpu_getCoreIndex();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   983      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
	mul	d0,d3,#12
	mov.a	a15,d0
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]24832
.L74:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    45   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    46   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    47   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    48   * \ingroup IfxLld_Scu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    49   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    50   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    51   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    52   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    53   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    54   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    55   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    56   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    57   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    58  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    59  #ifndef IFXSCUWDT_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    60  #define IFXSCUWDT_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    61  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    62  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    63  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    64  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "Cpu/Std/Ifx_Types.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    69  #include "IfxScu_bf.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    70  #include "IfxScuWdt.asm.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    71  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    72  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    73  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    74  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    76  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    77  /** \brief Endinit operation Timeout counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    78   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    79  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    80  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    82  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    83  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    84  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    85  /** \brief Configuration structure for Scu Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    86   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    87   * Safety WDT registers defined in IfxScuWdt.h file.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    88   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    89  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    90  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    91      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    92      uint16            reload;                              /**< \brief WDT reload value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    93      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    97      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    98      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    99      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   100  } IfxScuWdt_Config;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   101  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   102  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   103   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   104  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   106  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   107  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   108  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   109  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   110   *   This API initialize the ScuWdt configuration structure to default values, these default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   111   *   values are for software specific, not necessarily hardware reset values.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   112   *   User must use this API call before IfxScuWdt_Init API call
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   113   * \param config ScuWdt configuration structure to be initialized
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   114   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   115   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   116  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   117  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   118  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   119   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   120   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   121   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   122   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   123   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   124   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   125   * \param wdt reference to register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   126   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   127   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   128   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   129  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   130  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   131  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   132   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   133   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   134   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   135   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   136   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   137   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   138   * \param wdt reference to register map of Safety WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   139   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   140   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   141   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   142  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   143  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   145  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   146  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   147   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   148  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   150  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   151  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   152  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   153  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   154   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   155   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   156   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   157   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   158   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   159   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   160   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   161   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   162   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   163   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   164   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   165  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   166  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   167  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   168   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   169   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   170   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   171   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   172   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   173   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   174   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   175   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   176   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   177   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   178  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   179  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   180  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   181   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   182   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   183   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   184   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   185   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   186   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   187   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   188   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   189   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   190  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   191  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   192  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   193   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   194   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   195   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   197   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   198   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   199   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   201  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   203  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   204  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   205  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   206  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   207  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   208   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   209   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   210   *   User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   211   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   212   *   ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   213   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   217  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   219  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   220   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   221   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   222   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   223   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   224   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   225   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   227   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   228   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   229  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   230  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   231  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   232   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   233   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   234   *   User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   235   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   240  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   242   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   243   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   244   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   245   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   246   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   247   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   248   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   249  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   250  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   251  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   252  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   253  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   254   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   255  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   259  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   262   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   263   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   264   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   265   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   266   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   267   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   268   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   269  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   270  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   271  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   278   * \return Endinit status for the Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   279   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   280  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   281  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   282  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   283   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   284   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   285   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   286   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   287   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   288   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   289   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   290  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   291  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   292  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   293  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   294  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   295  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   296  /** \brief SCUWDT API to change CPU Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   297   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   298   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   299   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   300   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   301   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   302   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   303   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   304  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   305  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   306  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   307   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   308   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   309   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   311   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   316  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \brief SCUWDT API to change Safety Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   318   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   319   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   320   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   321   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   322   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   323   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   324   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   325  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   326  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   327  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   328   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   329   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   330   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   331   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   333   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   334   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   335   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   336  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   337  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   338  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   339   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   340   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   341   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   342   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   343   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   347  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   351   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   352   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   353   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   357  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   358  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   359   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   360   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   361   *   periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   362   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   363   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   366  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   368  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   370   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   371   * periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   372   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   373   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   374   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   375   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   376  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   377  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   378  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   379   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   380   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   381   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   382   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   383   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   384   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   385  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   386  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   387  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   388   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   389   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   390  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   391  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   392  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   393   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   394   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   395   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   396   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   397   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   398   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   399  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   400  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   401  /** \brief SCUWDT API to service CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   402   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   403   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   404   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   405   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   406   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   407   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   408   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   409  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   410  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   411  /** \brief SCUWDT API to service Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   412   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   413   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   414   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   415   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   416   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   417   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   418   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   419  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   420  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   421  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   422  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   423  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   424  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   425  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   426  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   427  /** \brief Enables the watchdog functionality with debugger connected,\n
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   428   * debug interface will also be enabled, if not enabled already.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   429   * \return Status, Success = 0, Failure = 1.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   430   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   431  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   432  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   433  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   434  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   435  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   436  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   437  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   438  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   440      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   441          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   442          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   443                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   444                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   445                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   446      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   447  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   448      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   449      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   450                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   451                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   452                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   453  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   454      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   456      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   457  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   458  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   459  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   460  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   461  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   462      if (SCU_WDTS_CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   463      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   464          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   465          SCU_WDTS_CON0.U = (1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   466                            (0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   467                            (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   468                            (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   469      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   470  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   471      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   472      SCU_WDTS_CON0.U = (0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   473                        (1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   474                        (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   475                        (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   476  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   477      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   478      while (SCU_WDTS_CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   479      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   480  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   481  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   482  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   483  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   484  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   485      uint16 password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   486  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   487      /* Read Password from CON0 register
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   488       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   489       * to toggle them before returning password */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   490      password  = watchdog->CON0.B.PW;
	ld.w	d0,[a15]
	extr.u	d0,d0,#2,#14
.L138:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   491      password ^= 0x003F;
	xor	d4,d0,#63
.L139:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   493      return password;      (inlined)
	j	.L5

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   494  }      (inlined)
.L5:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   984  t PCBYP to 0 if cache is enabled */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   985          IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   986          Ifx_CPU_PCON0 pcon0;
	mul	d0,d3,#12
	mov.a	a15,d0
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]24832
.L77:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    45   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    46   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    47   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    48   * \ingroup IfxLld_Scu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    49   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    50   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    51   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    52   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    53   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    54   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    55   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    56   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    57   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    58  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    59  #ifndef IFXSCUWDT_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    60  #define IFXSCUWDT_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    61  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    62  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    63  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    64  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "Cpu/Std/Ifx_Types.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    69  #include "IfxScu_bf.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    70  #include "IfxScuWdt.asm.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    71  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    72  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    73  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    74  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    76  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    77  /** \brief Endinit operation Timeout counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    78   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    79  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    80  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    82  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    83  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    84  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    85  /** \brief Configuration structure for Scu Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    86   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    87   * Safety WDT registers defined in IfxScuWdt.h file.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    88   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    89  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    90  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    91      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    92      uint16            reload;                              /**< \brief WDT reload value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    93      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    97      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    98      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    99      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   100  } IfxScuWdt_Config;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   101  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   102  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   103   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   104  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   106  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   107  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   108  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   109  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   110   *   This API initialize the ScuWdt configuration structure to default values, these default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   111   *   values are for software specific, not necessarily hardware reset values.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   112   *   User must use this API call before IfxScuWdt_Init API call
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   113   * \param config ScuWdt configuration structure to be initialized
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   114   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   115   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   116  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   117  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   118  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   119   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   120   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   121   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   122   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   123   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   124   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   125   * \param wdt reference to register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   126   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   127   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   128   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   129  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   130  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   131  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   132   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   133   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   134   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   135   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   136   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   137   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   138   * \param wdt reference to register map of Safety WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   139   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   140   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   141   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   142  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   143  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   145  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   146  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   147   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   148  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   150  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   151  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   152  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   153  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   154   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   155   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   156   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   157   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   158   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   159   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   160   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   161   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   162   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   163   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   164   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   165  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   166  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   167  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   168   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   169   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   170   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   171   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   172   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   173   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   174   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   175   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   176   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   177   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   178  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   179  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   180  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   181   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   182   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   183   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   184   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   185   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   186   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   187   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   188   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   189   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   190  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   191  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   192  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   193   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   194   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   195   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   197   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   198   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   199   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   201  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   203  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   204  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   205  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   206  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   207  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   208   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   209   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   210   *   User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   211   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   212   *   ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   213   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   217  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   219  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   220   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   221   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   222   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   223   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   224   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   225   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   227   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   228   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   229  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   230  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   231  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   232   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   233   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   234   *   User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   235   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   240  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   242   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   243   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   244   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   245   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   246   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   247   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   248   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   249  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   250  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   251  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   252  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   253  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   254   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   255  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   259  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   262   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   263   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   264   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   265   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   266   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   267   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   268   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   269  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   270  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   271  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   278   * \return Endinit status for the Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   279   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   280  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   281  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   282  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   283   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   284   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   285   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   286   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   287   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   288   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   289   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   290  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   291  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   292  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   293  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   294  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   295  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   296  /** \brief SCUWDT API to change CPU Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   297   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   298   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   299   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   300   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   301   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   302   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   303   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   304  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   305  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   306  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   307   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   308   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   309   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   311   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   316  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \brief SCUWDT API to change Safety Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   318   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   319   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   320   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   321   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   322   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   323   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   324   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   325  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   326  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   327  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   328   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   329   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   330   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   331   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   333   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   334   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   335   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   336  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   337  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   338  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   339   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   340   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   341   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   342   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   343   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   347  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   351   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   352   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   353   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   357  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   358  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   359   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   360   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   361   *   periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   362   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   363   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   366  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   368  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   370   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   371   * periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   372   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   373   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   374   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   375   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   376  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   377  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   378  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   379   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   380   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   381   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   382   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   383   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   384   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   385  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   386  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   387  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   388   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   389   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   390  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   391  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   392  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   393   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   394   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   395   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   396   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   397   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   398   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   399  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   400  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   401  /** \brief SCUWDT API to service CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   402   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   403   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   404   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   405   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   406   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   407   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   408   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   409  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   410  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   411  /** \brief SCUWDT API to service Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   412   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   413   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   414   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   415   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   416   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   417   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   418   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   419  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   420  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   421  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   422  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   423  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   424  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   425  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   426  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   427  /** \brief Enables the watchdog functionality with debugger connected,\n
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   428   * debug interface will also be enabled, if not enabled already.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   429   * \return Status, Success = 0, Failure = 1.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   430   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   431  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   432  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   433  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   434  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   435  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   436  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   437  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   438  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L137:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L6
.L172:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   440      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   441          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   442          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   443                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   444                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d15,d4,#2
	or	d15,#1
.L173:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   445                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L174:
	sha	d0,d0,#16
.L175:
	or	d0,d15
.L176:
	st.w	[a15],d0

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)      (inlined)
.L6:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   446      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   447  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   448      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   449      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   450                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   451                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d15,d4,#2
	or	d15,#2
.L177:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   452                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L178:
	sha	d0,d0,#16
.L179:
	or	d15,d0
.L180:
	st.w	[a15],d15
.L181:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)      (inlined)
	j	.L7
.L8:
.L7:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   453  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   454      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)
	ld.w	d15,[a15]
	and	d15,#1
.L182:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)      (inlined)
	jeq	d15,#1,.L8
.L78:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   987  cuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   988          Ifx_CPU_PCON0 pcon0;
	mov	d15,#0
.L141:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   989          pcon0.B.PCBYP = enable ? 0 : 1; /*depending on the enable bypass bit is reset/set */      (inlined)
	jeq	d2,#0,.L9
.L183:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   989          pcon0.U       = 0;
	mov	d0,#0
.L184:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   989          pcon0.B.PCBYP = enable ? 0 : 1; /*depending on the enable bypass bit is reset/set */      (inlined)
	j	.L10
.L9:
	mov	d0,#1

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   989          pcon0.B.PCBYP = enable ? 0 : 1; /*depending on the enable bypass bit is reset/set */      (inlined)
.L10:
	insert	d15,d15,d0,#1,#1
.L185:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   990          pcon0.B.PCBYP = enable ? 0 : 1; /*depending on the enable bypass bit is reset/set */
	mtcr	#37388,d15
	isync
.L186:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   991          __mtcr(CPU_PCON0, pcon0.U);
	mul	d15,d3,#12
.L142:
	mov.a	a15,d15
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]24832
.L89:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    45   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    46   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    47   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    48   * \ingroup IfxLld_Scu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    49   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    50   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    51   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    52   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    53   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    54   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    55   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    56   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    57   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    58  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    59  #ifndef IFXSCUWDT_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    60  #define IFXSCUWDT_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    61  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    62  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    63  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    64  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "Cpu/Std/Ifx_Types.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    69  #include "IfxScu_bf.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    70  #include "IfxScuWdt.asm.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    71  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    72  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    73  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    74  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    76  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    77  /** \brief Endinit operation Timeout counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    78   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    79  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    80  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    82  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    83  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    84  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    85  /** \brief Configuration structure for Scu Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    86   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    87   * Safety WDT registers defined in IfxScuWdt.h file.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    88   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    89  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    90  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    91      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    92      uint16            reload;                              /**< \brief WDT reload value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    93      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    97      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    98      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    99      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   100  } IfxScuWdt_Config;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   101  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   102  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   103   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   104  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   106  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   107  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   108  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   109  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   110   *   This API initialize the ScuWdt configuration structure to default values, these default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   111   *   values are for software specific, not necessarily hardware reset values.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   112   *   User must use this API call before IfxScuWdt_Init API call
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   113   * \param config ScuWdt configuration structure to be initialized
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   114   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   115   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   116  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   117  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   118  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   119   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   120   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   121   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   122   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   123   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   124   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   125   * \param wdt reference to register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   126   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   127   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   128   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   129  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   130  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   131  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   132   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   133   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   134   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   135   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   136   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   137   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   138   * \param wdt reference to register map of Safety WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   139   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   140   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   141   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   142  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   143  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   145  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   146  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   147   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   148  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   150  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   151  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   152  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   153  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   154   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   155   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   156   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   157   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   158   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   159   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   160   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   161   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   162   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   163   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   164   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   165  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   166  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   167  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   168   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   169   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   170   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   171   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   172   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   173   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   174   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   175   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   176   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   177   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   178  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   179  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   180  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   181   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   182   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   183   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   184   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   185   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   186   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   187   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   188   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   189   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   190  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   191  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   192  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   193   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   194   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   195   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   197   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   198   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   199   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   201  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   203  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   204  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   205  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   206  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   207  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   208   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   209   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   210   *   User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   211   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   212   *   ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   213   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   217  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   219  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   220   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   221   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   222   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   223   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   224   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   225   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   227   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   228   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   229  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   230  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   231  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   232   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   233   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   234   *   User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   235   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   240  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   242   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   243   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   244   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   245   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   246   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   247   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   248   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   249  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   250  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   251  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   252  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   253  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   254   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   255  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   259  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   262   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   263   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   264   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   265   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   266   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   267   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   268   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   269  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   270  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   271  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   278   * \return Endinit status for the Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   279   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   280  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   281  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   282  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   283   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   284   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   285   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   286   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   287   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   288   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   289   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   290  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   291  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   292  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   293  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   294  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   295  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   296  /** \brief SCUWDT API to change CPU Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   297   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   298   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   299   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   300   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   301   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   302   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   303   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   304  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   305  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   306  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   307   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   308   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   309   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   311   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   316  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \brief SCUWDT API to change Safety Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   318   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   319   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   320   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   321   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   322   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   323   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   324   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   325  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   326  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   327  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   328   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   329   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   330   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   331   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   333   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   334   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   335   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   336  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   337  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   338  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   339   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   340   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   341   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   342   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   343   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   347  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   351   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   352   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   353   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   357  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   358  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   359   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   360   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   361   *   periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   362   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   363   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   366  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   368  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   370   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   371   * periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   372   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   373   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   374   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   375   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   376  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   377  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   378  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   379   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   380   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   381   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   382   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   383   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   384   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   385  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   386  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   387  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   388   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   389   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   390  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   391  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   392  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   393   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   394   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   395   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   396   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   397   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   398   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   399  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   400  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   401  /** \brief SCUWDT API to service CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   402   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   403   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   404   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   405   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   406   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   407   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   408   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   409  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   410  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   411  /** \brief SCUWDT API to service Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   412   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   413   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   414   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   415   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   416   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   417   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   418   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   419  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   420  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   421  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   422  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   423  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   424  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   425  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   426  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   427  /** \brief Enables the watchdog functionality with debugger connected,\n
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   428   * debug interface will also be enabled, if not enabled already.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   429   * \return Status, Success = 0, Failure = 1.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   430   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   431  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   432  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   433  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   434  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   435  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   436  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   437  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   438  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   440      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   441          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   442          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   443                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   444                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   445                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   446      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   447  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   448      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   449      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   450                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   451                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   452                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   453  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   454      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   456      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   457  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   458  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   459  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   460  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   461  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   462      if (SCU_WDTS_CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   463      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   464          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   465          SCU_WDTS_CON0.U = (1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   466                            (0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   467                            (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   468                            (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   469      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   470  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   471      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   472      SCU_WDTS_CON0.U = (0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   473                        (1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   474                        (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   475                        (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   476  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   477      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   478      while (SCU_WDTS_CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   479      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   480  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   481  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   482  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   483  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   484  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   485      uint16 password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   486  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   487      /* Read Password from CON0 register
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   488       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   489       * to toggle them before returning password */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   490      password  = watchdog->CON0.B.PW;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   491      password ^= 0x003F;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   492  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   493      return password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   494  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   495  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   496  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   497  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   498  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   499      return (boolean)watchdog->CON0.B.ENDINIT;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   500  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   501  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   502  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   503  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   504  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   505      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   506  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   507  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   508  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   509  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   510  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   511      uint16        password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   512      Ifx_SCU_WDTS *watchdog = &MODULE_SCU.WDTS;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   513  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   514      /* Read Password from Safety WDT CON0 register
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   515       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   516       * to toggle them before returning password */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   517      password  = watchdog->CON0.B.PW;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   518      password ^= 0x003F;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   519  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   520      return password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   521  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   522  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   523  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   524  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   525  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   526      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L187:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   526      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L11
.L188:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   527      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   528          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   529          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   530                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   531                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d15,d4,#2
	or	d15,#1
.L189:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   532                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L190:
	sha	d0,d0,#16
.L191:
	or	d15,d0
.L192:
	st.w	[a15],d15

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   526      if (watchdog->CON0.B.LCK)      (inlined)
.L11:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   533      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   534  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   535      /* Set ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   536      watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   537                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   538                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d4,#2
.L140:
	or	d15,d4,#3
.L193:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   539                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L194:
	sha	d0,d0,#16
.L195:
	or	d15,d0
.L196:
	st.w	[a15],d15
.L197:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   542      while (watchdog->CON0.B.ENDINIT == 0)      (inlined)
	j	.L12
.L13:
.L12:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   540  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   541      /* read back ENDINIT and wait until it has been set */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   542      while (watchdog->CON0.B.ENDINIT == 0)
	ld.w	d15,[a15]
.L198:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   542      while (watchdog->CON0.B.ENDINIT == 0)      (inlined)
	jz.t	d15:0,.L13
.L85:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   992   ? 0 : 1; /*depending on the enable bypass bit is reset/set */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   993          __mtcr(CPU_PCON0, pcon0.U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   994          IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
	isync
.L59:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   113  cxi);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   114  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   115      /*enable program cache */
	mov	d2,#1
.L96:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L143:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
	and	d3,d15,#7
.L199:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;      (inlined)
	j	.L14

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  }      (inlined)
.L14:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   787  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   788  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   789  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   790  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   791      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   792  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   793  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   794  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   795  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   796  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   797      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   798  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   799  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   800  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   801  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   802  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   803      Ifx_CPU_CCNT ccnt;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   804  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   805      if (address == CPU_CCNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   806      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   807          ccnt.U = __mfcr(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   808      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   809      else if (address == CPU_ICNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   810      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   811          ccnt.U = __mfcr(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   812      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   813      else if (address == CPU_M1CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   814      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   815          ccnt.U = __mfcr(CPU_M1CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   816      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   817      else if (address == CPU_M2CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   818      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   819          ccnt.U = __mfcr(CPU_M2CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   820      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   821      else if (address == CPU_M3CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   822      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   823          ccnt.U = __mfcr(CPU_M3CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   824      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   825  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   826      return ccnt.B.CountValue;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   827  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   828  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   829  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   830  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   831  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   832      Ifx_CPU_CCNT ccnt;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   833  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   834      if (address == CPU_CCNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   835      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   836          ccnt.U = __mfcr(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   837      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   838      else if (address == CPU_ICNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   839      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   840          ccnt.U = __mfcr(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   841      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   842      else if (address == CPU_M1CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   843      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   844          ccnt.U = __mfcr(CPU_M1CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   845      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   846      else if (address == CPU_M2CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   847      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   848          ccnt.U = __mfcr(CPU_M2CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   849      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   850      else if (address == CPU_M3CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   851      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   852          ccnt.U = __mfcr(CPU_M3CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   853      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   854  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   855      return ccnt.B.SOvf;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   856  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   857  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   858  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   859  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   860  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   861      uint32  k;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   862      uint32  nxt_cxi_val = 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   863      uint32 *prvCsa      = 0U;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   864      uint32 *nxtCsa      = csaBegin;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   865      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   866  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   867      for (k = 0; k < numOfCsa; k++)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   868      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   869          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   870  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   871          if (k == 0)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   872          {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   873              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   874          }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   875          else
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   876          {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   877              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   878          }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   879  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   880          if (k == (numOfCsa - 3U))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   881          {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   882              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   883          }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   884  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   885          prvCsa  = (uint32 *)nxtCsa;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   886          nxtCsa += 16;           /* next CSA */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   887      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   888  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   889      *prvCsa = 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   890  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   891  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   892  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   893  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   894  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   895      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   896      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   897          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   898          Ifx_CPU_PCON1 pcon1;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   899          pcon1.U       = __mfcr(CPU_PCON1);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   900          pcon1.B.PCINV = 1;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   901          __mtcr(CPU_PCON1, pcon1.U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   902          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   903      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   904  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   905  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   906  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   907  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   908  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   909      uint8 segment = (uint32)address >> 24;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   910      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   911  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   912  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   913  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   914  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   915  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   916      Ifx_CPU_CCTRL cctrl;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   917      cctrl.U    = __mfcr(CPU_CCTRL);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   918      /*Disable the counters */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   919      cctrl.B.CE = 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   920      __mtcr(CPU_CCTRL, cctrl.U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   921  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   922      /* reset the counters */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   923      __mtcr(CPU_CCNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   924      __mtcr(CPU_ICNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   925      __mtcr(CPU_M1CNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   926      __mtcr(CPU_M2CNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   927      __mtcr(CPU_M3CNT, 0);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   928  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   929      /*Enable the counters, set the counter mode */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   930      cctrl.B.CE = 1;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   931      cctrl.B.CM = mode;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   932      __mtcr(CPU_CCTRL, cctrl.U);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   933  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   934  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   935  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   936  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   937  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938      if (enabled != FALSE)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   939      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   940          __enable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   941      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   942  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   943  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   944  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   945  IFX_INLINE void IfxCpu_setDataCache(boolean enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   946  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   947      uint32 coreIndex   = IfxCpu_getCoreIndex();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   948      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
	mul	d0,d3,#12
	mov.a	a15,d0
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]24832
.L104:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    45   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    46   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    47   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    48   * \ingroup IfxLld_Scu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    49   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    50   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    51   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    52   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    53   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    54   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    55   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    56   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    57   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    58  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    59  #ifndef IFXSCUWDT_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    60  #define IFXSCUWDT_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    61  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    62  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    63  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    64  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "Cpu/Std/Ifx_Types.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    69  #include "IfxScu_bf.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    70  #include "IfxScuWdt.asm.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    71  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    72  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    73  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    74  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    76  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    77  /** \brief Endinit operation Timeout counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    78   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    79  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    80  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    82  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    83  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    84  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    85  /** \brief Configuration structure for Scu Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    86   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    87   * Safety WDT registers defined in IfxScuWdt.h file.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    88   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    89  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    90  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    91      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    92      uint16            reload;                              /**< \brief WDT reload value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    93      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    97      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    98      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    99      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   100  } IfxScuWdt_Config;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   101  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   102  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   103   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   104  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   106  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   107  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   108  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   109  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   110   *   This API initialize the ScuWdt configuration structure to default values, these default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   111   *   values are for software specific, not necessarily hardware reset values.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   112   *   User must use this API call before IfxScuWdt_Init API call
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   113   * \param config ScuWdt configuration structure to be initialized
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   114   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   115   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   116  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   117  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   118  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   119   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   120   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   121   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   122   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   123   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   124   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   125   * \param wdt reference to register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   126   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   127   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   128   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   129  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   130  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   131  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   132   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   133   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   134   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   135   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   136   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   137   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   138   * \param wdt reference to register map of Safety WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   139   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   140   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   141   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   142  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   143  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   145  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   146  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   147   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   148  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   150  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   151  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   152  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   153  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   154   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   155   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   156   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   157   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   158   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   159   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   160   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   161   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   162   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   163   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   164   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   165  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   166  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   167  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   168   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   169   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   170   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   171   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   172   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   173   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   174   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   175   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   176   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   177   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   178  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   179  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   180  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   181   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   182   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   183   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   184   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   185   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   186   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   187   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   188   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   189   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   190  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   191  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   192  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   193   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   194   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   195   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   197   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   198   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   199   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   201  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   203  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   204  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   205  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   206  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   207  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   208   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   209   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   210   *   User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   211   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   212   *   ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   213   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   217  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   219  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   220   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   221   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   222   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   223   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   224   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   225   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   227   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   228   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   229  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   230  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   231  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   232   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   233   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   234   *   User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   235   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   240  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   242   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   243   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   244   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   245   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   246   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   247   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   248   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   249  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   250  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   251  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   252  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   253  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   254   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   255  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   259  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   262   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   263   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   264   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   265   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   266   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   267   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   268   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   269  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   270  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   271  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   278   * \return Endinit status for the Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   279   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   280  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   281  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   282  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   283   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   284   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   285   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   286   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   287   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   288   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   289   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   290  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   291  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   292  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   293  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   294  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   295  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   296  /** \brief SCUWDT API to change CPU Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   297   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   298   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   299   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   300   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   301   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   302   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   303   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   304  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   305  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   306  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   307   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   308   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   309   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   311   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   316  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \brief SCUWDT API to change Safety Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   318   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   319   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   320   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   321   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   322   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   323   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   324   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   325  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   326  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   327  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   328   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   329   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   330   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   331   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   333   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   334   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   335   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   336  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   337  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   338  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   339   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   340   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   341   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   342   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   343   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   347  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   351   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   352   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   353   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   357  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   358  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   359   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   360   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   361   *   periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   362   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   363   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   366  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   368  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   370   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   371   * periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   372   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   373   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   374   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   375   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   376  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   377  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   378  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   379   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   380   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   381   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   382   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   383   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   384   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   385  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   386  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   387  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   388   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   389   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   390  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   391  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   392  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   393   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   394   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   395   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   396   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   397   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   398   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   399  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   400  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   401  /** \brief SCUWDT API to service CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   402   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   403   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   404   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   405   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   406   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   407   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   408   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   409  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   410  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   411  /** \brief SCUWDT API to service Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   412   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   413   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   414   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   415   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   416   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   417   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   418   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   419  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   420  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   421  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   422  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   423  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   424  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   425  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   426  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   427  /** \brief Enables the watchdog functionality with debugger connected,\n
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   428   * debug interface will also be enabled, if not enabled already.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   429   * \return Status, Success = 0, Failure = 1.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   430   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   431  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   432  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   433  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   434  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   435  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   436  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   437  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   438  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   440      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   441          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   442          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   443                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   444                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   445                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   446      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   447  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   448      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   449      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   450                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   451                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   452                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   453  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   454      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   456      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   457  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   458  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   459  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   460  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   461  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   462      if (SCU_WDTS_CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   463      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   464          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   465          SCU_WDTS_CON0.U = (1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   466                            (0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   467                            (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   468                            (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   469      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   470  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   471      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   472      SCU_WDTS_CON0.U = (0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   473                        (1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   474                        (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   475                        (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   476  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   477      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   478      while (SCU_WDTS_CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   479      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   480  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   481  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   482  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   483  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   484  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   485      uint16 password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   486  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   487      /* Read Password from CON0 register
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   488       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   489       * to toggle them before returning password */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   490      password  = watchdog->CON0.B.PW;
	ld.w	d0,[a15]
	extr.u	d0,d0,#2,#14
.L145:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   491      password ^= 0x003F;
	xor	d4,d0,#63
.L146:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   493      return password;      (inlined)
	j	.L15

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   494  }      (inlined)
.L15:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   949                        /* Step 1: Set PCBYP to 0 if cache is enabled */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   950          IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   951          Ifx_CPU_DCON0 dcon0;
	mul	d0,d3,#12
	mov.a	a15,d0
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]24832
.L106:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    45   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    46   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    47   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    48   * \ingroup IfxLld_Scu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    49   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    50   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    51   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    52   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    53   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    54   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    55   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    56   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    57   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    58  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    59  #ifndef IFXSCUWDT_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    60  #define IFXSCUWDT_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    61  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    62  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    63  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    64  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "Cpu/Std/Ifx_Types.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    69  #include "IfxScu_bf.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    70  #include "IfxScuWdt.asm.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    71  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    72  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    73  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    74  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    76  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    77  /** \brief Endinit operation Timeout counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    78   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    79  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    80  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    82  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    83  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    84  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    85  /** \brief Configuration structure for Scu Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    86   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    87   * Safety WDT registers defined in IfxScuWdt.h file.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    88   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    89  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    90  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    91      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    92      uint16            reload;                              /**< \brief WDT reload value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    93      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    97      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    98      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    99      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   100  } IfxScuWdt_Config;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   101  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   102  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   103   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   104  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   106  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   107  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   108  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   109  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   110   *   This API initialize the ScuWdt configuration structure to default values, these default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   111   *   values are for software specific, not necessarily hardware reset values.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   112   *   User must use this API call before IfxScuWdt_Init API call
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   113   * \param config ScuWdt configuration structure to be initialized
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   114   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   115   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   116  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   117  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   118  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   119   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   120   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   121   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   122   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   123   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   124   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   125   * \param wdt reference to register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   126   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   127   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   128   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   129  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   130  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   131  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   132   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   133   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   134   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   135   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   136   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   137   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   138   * \param wdt reference to register map of Safety WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   139   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   140   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   141   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   142  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   143  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   145  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   146  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   147   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   148  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   150  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   151  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   152  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   153  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   154   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   155   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   156   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   157   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   158   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   159   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   160   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   161   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   162   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   163   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   164   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   165  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   166  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   167  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   168   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   169   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   170   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   171   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   172   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   173   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   174   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   175   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   176   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   177   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   178  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   179  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   180  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   181   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   182   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   183   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   184   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   185   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   186   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   187   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   188   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   189   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   190  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   191  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   192  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   193   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   194   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   195   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   197   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   198   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   199   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   201  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   203  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   204  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   205  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   206  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   207  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   208   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   209   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   210   *   User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   211   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   212   *   ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   213   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   217  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   219  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   220   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   221   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   222   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   223   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   224   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   225   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   227   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   228   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   229  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   230  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   231  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   232   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   233   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   234   *   User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   235   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   240  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   242   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   243   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   244   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   245   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   246   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   247   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   248   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   249  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   250  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   251  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   252  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   253  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   254   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   255  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   259  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   262   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   263   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   264   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   265   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   266   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   267   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   268   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   269  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   270  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   271  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   278   * \return Endinit status for the Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   279   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   280  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   281  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   282  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   283   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   284   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   285   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   286   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   287   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   288   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   289   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   290  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   291  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   292  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   293  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   294  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   295  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   296  /** \brief SCUWDT API to change CPU Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   297   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   298   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   299   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   300   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   301   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   302   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   303   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   304  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   305  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   306  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   307   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   308   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   309   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   311   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   316  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \brief SCUWDT API to change Safety Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   318   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   319   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   320   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   321   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   322   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   323   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   324   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   325  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   326  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   327  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   328   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   329   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   330   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   331   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   333   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   334   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   335   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   336  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   337  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   338  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   339   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   340   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   341   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   342   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   343   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   347  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   351   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   352   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   353   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   357  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   358  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   359   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   360   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   361   *   periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   362   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   363   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   366  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   368  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   370   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   371   * periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   372   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   373   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   374   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   375   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   376  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   377  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   378  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   379   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   380   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   381   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   382   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   383   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   384   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   385  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   386  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   387  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   388   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   389   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   390  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   391  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   392  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   393   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   394   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   395   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   396   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   397   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   398   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   399  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   400  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   401  /** \brief SCUWDT API to service CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   402   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   403   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   404   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   405   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   406   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   407   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   408   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   409  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   410  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   411  /** \brief SCUWDT API to service Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   412   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   413   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   414   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   415   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   416   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   417   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   418   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   419  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   420  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   421  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   422  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   423  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   424  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   425  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   426  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   427  /** \brief Enables the watchdog functionality with debugger connected,\n
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   428   * debug interface will also be enabled, if not enabled already.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   429   * \return Status, Success = 0, Failure = 1.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   430   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   431  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   432  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   433  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   434  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   435  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   436  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   437  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   438  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L144:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L16
.L200:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   440      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   441          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   442          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   443                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   444                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d15,d4,#2
	or	d15,#1
.L201:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   445                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L202:
	sha	d0,d0,#16
.L203:
	or	d0,d15
.L204:
	st.w	[a15],d0

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)      (inlined)
.L16:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   446      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   447  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   448      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   449      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   450                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   451                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d15,d4,#2
	or	d15,#2
.L205:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   452                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L206:
	sha	d0,d0,#16
.L207:
	or	d15,d0
.L208:
	st.w	[a15],d15
.L209:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)      (inlined)
	j	.L17
.L18:
.L17:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   453  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   454      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)
	ld.w	d15,[a15]
	and	d15,#1
.L210:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)      (inlined)
	jeq	d15,#1,.L18
.L107:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   952  if cache is enabled */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   953          IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
	mov	d15,#0
.L148:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   954          dcon0.B.DCBYP = enable ? 0 : 1; /*depending on the enable bypas bit is reset/set */      (inlined)
	jeq	d2,#0,.L19
.L211:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   954          Ifx_CPU_DCON0 dcon0;
	mov	d0,#0
.L212:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   954          dcon0.B.DCBYP = enable ? 0 : 1; /*depending on the enable bypas bit is reset/set */      (inlined)
	j	.L20
.L19:
	mov	d0,#1

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   954          dcon0.B.DCBYP = enable ? 0 : 1; /*depending on the enable bypas bit is reset/set */      (inlined)
.L20:
	insert	d15,d15,d0,#1,#1
.L213:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   955          dcon0.U       = 0;
	mtcr	#36928,d15
	isync
.L214:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   956          dcon0.B.DCBYP = enable ? 0 : 1; /*depending on the enable bypas bit is reset/set */
	mul	d15,d3,#12
.L149:
	mov.a	a15,d15
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]24832
.L112:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    45   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    46   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    47   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    48   * \ingroup IfxLld_Scu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    49   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    50   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    51   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    52   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    53   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    54   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    55   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    56   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    57   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    58  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    59  #ifndef IFXSCUWDT_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    60  #define IFXSCUWDT_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    61  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    62  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    63  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    64  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "Cpu/Std/Ifx_Types.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    69  #include "IfxScu_bf.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    70  #include "IfxScuWdt.asm.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    71  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    72  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    73  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    74  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    76  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    77  /** \brief Endinit operation Timeout counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    78   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    79  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    80  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    82  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    83  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    84  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    85  /** \brief Configuration structure for Scu Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    86   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    87   * Safety WDT registers defined in IfxScuWdt.h file.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    88   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    89  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    90  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    91      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    92      uint16            reload;                              /**< \brief WDT reload value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    93      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    97      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    98      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    99      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   100  } IfxScuWdt_Config;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   101  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   102  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   103   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   104  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   106  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   107  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   108  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   109  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   110   *   This API initialize the ScuWdt configuration structure to default values, these default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   111   *   values are for software specific, not necessarily hardware reset values.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   112   *   User must use this API call before IfxScuWdt_Init API call
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   113   * \param config ScuWdt configuration structure to be initialized
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   114   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   115   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   116  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   117  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   118  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   119   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   120   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   121   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   122   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   123   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   124   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   125   * \param wdt reference to register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   126   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   127   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   128   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   129  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   130  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   131  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   132   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   133   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   134   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   135   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   136   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   137   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   138   * \param wdt reference to register map of Safety WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   139   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   140   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   141   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   142  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   143  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   145  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   146  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   147   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   148  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   150  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   151  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   152  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   153  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   154   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   155   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   156   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   157   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   158   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   159   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   160   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   161   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   162   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   163   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   164   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   165  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   166  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   167  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   168   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   169   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   170   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   171   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   172   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   173   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   174   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   175   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   176   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   177   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   178  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   179  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   180  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   181   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   182   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   183   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   184   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   185   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   186   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   187   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   188   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   189   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   190  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   191  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   192  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   193   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   194   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   195   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   197   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   198   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   199   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   201  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   203  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   204  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   205  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   206  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   207  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   208   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   209   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   210   *   User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   211   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   212   *   ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   213   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   217  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   219  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   220   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   221   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   222   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   223   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   224   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   225   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   227   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   228   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   229  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   230  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   231  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   232   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   233   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   234   *   User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   235   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   240  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   242   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   243   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   244   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   245   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   246   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   247   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   248   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   249  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   250  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   251  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   252  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   253  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   254   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   255  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   259  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   262   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   263   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   264   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   265   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   266   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   267   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   268   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   269  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   270  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   271  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   278   * \return Endinit status for the Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   279   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   280  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   281  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   282  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   283   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   284   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   285   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   286   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   287   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   288   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   289   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   290  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   291  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   292  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   293  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   294  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   295  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   296  /** \brief SCUWDT API to change CPU Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   297   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   298   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   299   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   300   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   301   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   302   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   303   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   304  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   305  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   306  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   307   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   308   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   309   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   311   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   316  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \brief SCUWDT API to change Safety Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   318   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   319   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   320   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   321   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   322   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   323   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   324   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   325  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   326  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   327  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   328   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   329   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   330   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   331   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   333   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   334   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   335   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   336  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   337  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   338  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   339   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   340   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   341   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   342   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   343   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   347  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   351   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   352   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   353   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   357  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   358  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   359   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   360   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   361   *   periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   362   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   363   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   366  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   368  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   370   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   371   * periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   372   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   373   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   374   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   375   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   376  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   377  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   378  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   379   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   380   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   381   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   382   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   383   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   384   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   385  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   386  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   387  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   388   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   389   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   390  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   391  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   392  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   393   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   394   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   395   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   396   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   397   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   398   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   399  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   400  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   401  /** \brief SCUWDT API to service CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   402   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   403   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   404   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   405   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   406   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   407   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   408   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   409  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   410  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   411  /** \brief SCUWDT API to service Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   412   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   413   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   414   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   415   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   416   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   417   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   418   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   419  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   420  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   421  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   422  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   423  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   424  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   425  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   426  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   427  /** \brief Enables the watchdog functionality with debugger connected,\n
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   428   * debug interface will also be enabled, if not enabled already.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   429   * \return Status, Success = 0, Failure = 1.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   430   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   431  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   432  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   433  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   434  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   435  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   436  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   437  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   438  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   440      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   441          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   442          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   443                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   444                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   445                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   446      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   447  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   448      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   449      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   450                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   451                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   452                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   453  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   454      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   456      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   457  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   458  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   459  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   460  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   461  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   462      if (SCU_WDTS_CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   463      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   464          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   465          SCU_WDTS_CON0.U = (1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   466                            (0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   467                            (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   468                            (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   469      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   470  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   471      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   472      SCU_WDTS_CON0.U = (0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   473                        (1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   474                        (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   475                        (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   476  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   477      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   478      while (SCU_WDTS_CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   479      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   480  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   481  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   482  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   483  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   484  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   485      uint16 password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   486  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   487      /* Read Password from CON0 register
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   488       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   489       * to toggle them before returning password */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   490      password  = watchdog->CON0.B.PW;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   491      password ^= 0x003F;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   492  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   493      return password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   494  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   495  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   496  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   497  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   498  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   499      return (boolean)watchdog->CON0.B.ENDINIT;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   500  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   501  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   502  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   503  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   504  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   505      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   506  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   507  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   508  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   509  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   510  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   511      uint16        password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   512      Ifx_SCU_WDTS *watchdog = &MODULE_SCU.WDTS;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   513  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   514      /* Read Password from Safety WDT CON0 register
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   515       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   516       * to toggle them before returning password */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   517      password  = watchdog->CON0.B.PW;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   518      password ^= 0x003F;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   519  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   520      return password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   521  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   522  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   523  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   524  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   525  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   526      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L215:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   526      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L21
.L216:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   527      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   528          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   529          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   530                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   531                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d15,d4,#2
	or	d15,#1
.L217:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   532                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L218:
	sha	d0,d0,#16
.L219:
	or	d15,d0
.L220:
	st.w	[a15],d15

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   526      if (watchdog->CON0.B.LCK)      (inlined)
.L21:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   533      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   534  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   535      /* Set ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   536      watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   537                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   538                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d4,#2
.L147:
	or	d15,d4,#3
.L221:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   539                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L222:
	sha	d0,d0,#16
.L223:
	or	d15,d0
.L224:
	st.w	[a15],d15
.L225:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   542      while (watchdog->CON0.B.ENDINIT == 0)      (inlined)
	j	.L22
.L23:
.L22:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   540  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   541      /* read back ENDINIT and wait until it has been set */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   542      while (watchdog->CON0.B.ENDINIT == 0)
	ld.w	d15,[a15]
.L226:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   542      while (watchdog->CON0.B.ENDINIT == 0)      (inlined)
	jz.t	d15:0,.L23
.L109:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   957  PU_DCON0 dcon0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   958          dcon0.U       = 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   959          dcon0.B.DCBYP = enable ? 0 : 1; /*depending on the enable bypas bit is reset/set */
	isync
.L97:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   116  cxi);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   117  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   118      /*enable program cache */
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf003610c)
.L113:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    45   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    46   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    47   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    48   * \ingroup IfxLld_Scu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    49   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    50   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    51   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    52   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    53   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    54   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    55   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    56   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    57   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    58  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    59  #ifndef IFXSCUWDT_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    60  #define IFXSCUWDT_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    61  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    62  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    63  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    64  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "Cpu/Std/Ifx_Types.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    69  #include "IfxScu_bf.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    70  #include "IfxScuWdt.asm.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    71  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    72  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    73  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    74  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    76  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    77  /** \brief Endinit operation Timeout counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    78   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    79  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    80  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    82  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    83  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    84  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    85  /** \brief Configuration structure for Scu Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    86   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    87   * Safety WDT registers defined in IfxScuWdt.h file.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    88   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    89  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    90  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    91      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    92      uint16            reload;                              /**< \brief WDT reload value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    93      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    97      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    98      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    99      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   100  } IfxScuWdt_Config;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   101  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   102  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   103   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   104  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   106  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   107  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   108  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   109  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   110   *   This API initialize the ScuWdt configuration structure to default values, these default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   111   *   values are for software specific, not necessarily hardware reset values.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   112   *   User must use this API call before IfxScuWdt_Init API call
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   113   * \param config ScuWdt configuration structure to be initialized
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   114   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   115   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   116  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   117  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   118  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   119   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   120   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   121   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   122   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   123   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   124   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   125   * \param wdt reference to register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   126   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   127   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   128   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   129  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   130  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   131  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   132   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   133   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   134   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   135   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   136   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   137   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   138   * \param wdt reference to register map of Safety WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   139   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   140   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   141   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   142  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   143  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   145  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   146  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   147   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   148  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   150  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   151  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   152  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   153  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   154   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   155   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   156   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   157   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   158   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   159   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   160   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   161   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   162   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   163   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   164   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   165  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   166  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   167  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   168   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   169   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   170   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   171   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   172   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   173   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   174   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   175   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   176   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   177   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   178  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   179  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   180  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   181   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   182   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   183   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   184   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   185   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   186   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   187   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   188   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   189   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   190  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   191  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   192  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   193   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   194   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   195   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   197   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   198   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   199   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   201  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   203  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   204  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   205  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   206  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   207  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   208   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   209   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   210   *   User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   211   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   212   *   ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   213   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   217  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   219  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   220   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   221   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   222   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   223   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   224   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   225   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   227   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   228   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   229  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   230  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   231  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   232   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   233   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   234   *   User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   235   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   240  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   242   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   243   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   244   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   245   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   246   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   247   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   248   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   249  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   250  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   251  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   252  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   253  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   254   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   255  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   259  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   262   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   263   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   264   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   265   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   266   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   267   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   268   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   269  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   270  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   271  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   278   * \return Endinit status for the Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   279   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   280  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   281  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   282  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   283   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   284   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   285   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   286   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   287   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   288   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   289   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   290  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   291  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   292  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   293  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   294  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   295  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   296  /** \brief SCUWDT API to change CPU Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   297   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   298   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   299   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   300   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   301   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   302   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   303   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   304  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   305  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   306  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   307   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   308   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   309   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   311   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   316  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \brief SCUWDT API to change Safety Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   318   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   319   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   320   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   321   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   322   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   323   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   324   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   325  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   326  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   327  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   328   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   329   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   330   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   331   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   333   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   334   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   335   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   336  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   337  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   338  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   339   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   340   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   341   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   342   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   343   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   347  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   351   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   352   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   353   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   357  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   358  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   359   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   360   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   361   *   periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   362   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   363   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   366  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   368  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   370   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   371   * periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   372   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   373   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   374   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   375   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   376  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   377  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   378  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   379   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   380   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   381   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   382   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   383   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   384   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   385  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   386  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   387  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   388   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   389   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   390  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   391  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   392  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   393   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   394   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   395   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   396   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   397   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   398   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   399  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   400  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   401  /** \brief SCUWDT API to service CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   402   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   403   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   404   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   405   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   406   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   407   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   408   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   409  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   410  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   411  /** \brief SCUWDT API to service Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   412   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   413   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   414   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   415   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   416   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   417   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   418   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   419  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   420  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   421  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   422  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   423  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   424  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   425  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   426  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   427  /** \brief Enables the watchdog functionality with debugger connected,\n
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   428   * debug interface will also be enabled, if not enabled already.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   429   * \return Status, Success = 0, Failure = 1.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   430   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   431  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   432  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   433  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   434  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   435  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   436  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   437  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   438  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L227:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L24
.L228:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   440      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   441          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   442          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   443                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   444                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d15,d1,#2
	or	d15,#1
.L229:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   445                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L230:
	sha	d0,d0,#16
.L231:
	or	d15,d0
.L232:
	st.w	[a15],d15

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)      (inlined)
.L24:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   446      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   447  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   448      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   449      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   450                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   451                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d15,d1,#2
	or	d15,#2
.L233:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   452                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L234:
	sha	d0,d0,#16
.L235:
	or	d15,d0
.L236:
	st.w	[a15],d15
.L237:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)      (inlined)
	j	.L25
.L26:
.L25:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   453  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   454      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)
	ld.w	d15,[a15]
	and	d15,#1
.L238:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)      (inlined)
	jeq	d15,#1,.L26
.L114:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   119  cxi);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   120  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   121      /*enable program cache */
	movh.a	a15,#@his(__TRAPTAB_CPU1)
	lea	a15,[a15]@los(__TRAPTAB_CPU1)
	mov.d	d15,a15
.L239:
	mtcr	#65060,d15
	isync
.L240:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   122      IfxCpu_setProgramCache(IFX_CFG_CPU_CSTART_ENABLE_TRICORE1_PCACHE);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   123  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   124      /*enable data cache */
	movh.a	a15,#@his(__INTTAB_CPU1)
	lea	a15,[a15]@los(__INTTAB_CPU1)
	mov.d	d15,a15
.L241:
	mtcr	#65056,d15
	isync
.L242:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   125      IfxCpu_setDataCache(IFX_CFG_CPU_CSTART_ENABLE_TRICORE1_DCACHE);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   126  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   127      /* Clear the ENDINIT bit in the WDT_CON0 register, inline funtion */
	movh.a	a15,#@his(__ISTACK1)
	lea	a15,[a15]@los(__ISTACK1)
	mov.d	d15,a15
.L243:
	mtcr	#65064,d15
	isync
.L244:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   128      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[1], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   129  
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf003610c)
.L115:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    45   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    46   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    47   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    48   * \ingroup IfxLld_Scu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    49   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    50   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    51   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    52   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    53   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    54   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    55   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    56   * \ingroup IfxLld_Scu_Std_Wdt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    57   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    58  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    59  #ifndef IFXSCUWDT_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    60  #define IFXSCUWDT_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    61  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    62  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    63  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    64  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "Cpu/Std/Ifx_Types.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    69  #include "IfxScu_bf.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    70  #include "IfxScuWdt.asm.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    71  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    72  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    73  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    74  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    76  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    77  /** \brief Endinit operation Timeout counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    78   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    79  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    80  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    82  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    83  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    84  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    85  /** \brief Configuration structure for Scu Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    86   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    87   * Safety WDT registers defined in IfxScuWdt.h file.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    88   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    89  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    90  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    91      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    92      uint16            reload;                              /**< \brief WDT reload value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    93      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    97      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    98      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	    99      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   100  } IfxScuWdt_Config;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   101  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   102  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   103   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   104  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   106  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   107  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   108  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   109  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   110   *   This API initialize the ScuWdt configuration structure to default values, these default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   111   *   values are for software specific, not necessarily hardware reset values.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   112   *   User must use this API call before IfxScuWdt_Init API call
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   113   * \param config ScuWdt configuration structure to be initialized
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   114   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   115   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   116  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   117  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   118  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   119   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   120   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   121   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   122   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   123   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   124   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   125   * \param wdt reference to register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   126   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   127   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   128   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   129  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   130  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   131  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   132   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   133   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   134   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   135   *   with this interface.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   136   *   API corresponds to one instance of the hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   137   *   User must use this API call for each instance of the WDT hardware module used.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   138   * \param wdt reference to register map of Safety WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   139   * \param config ScuWdt configuration structure
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   140   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   141   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   142  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   143  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   145  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   146  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   147   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   148  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   150  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   151  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   152  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   153  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   154   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   155   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   156   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   157   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   158   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   159   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   160   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   161   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   162   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   163   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   164   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   165  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   166  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   167  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   168   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   169   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   170   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   171   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   172   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   173   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   174   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   175   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   176   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   177   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   178  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   179  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   180  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   181   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   182   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   183   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   184   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   185   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   186   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   187   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   188   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   189   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   190  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   191  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   192  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   193   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   194   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   195   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   197   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   198   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   199   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   201  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   203  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   204  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   205  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   206  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   207  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   208   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   209   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   210   *   User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   211   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   212   *   ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   213   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   214   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   217  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   219  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   220   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   221   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   222   * User need to use this API call before modifying any ENDINIT protected register. User must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   223   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   224   * ENDINIT shall not be interrupted by another interrupt/call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   225   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   227   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   228   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   229  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   230  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   231  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   232   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   233   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   234   *   User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   235   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   240  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   242   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   243   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   244   * User need to use this API call after modifying any ENDINIT protected register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   245   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   246   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   247   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   248   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   249  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   250  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   251  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   252  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   253  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   254   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   255  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   259  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   262   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   263   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   264   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   265   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   266   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   267   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   268   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   269  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   270  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   271  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   278   * \return Endinit status for the Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   279   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   280  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   281  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   282  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   283   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   284   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   285   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   286   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   287   * This API is only meant to be used with startup routines where function call is not possible.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   288   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   289   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   290  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   291  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   292  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   293  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   294  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   295  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   296  /** \brief SCUWDT API to change CPU Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   297   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   298   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   299   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   300   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   301   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   302   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   303   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   304  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   305  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   306  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   307   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   308   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   309   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   311   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   316  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \brief SCUWDT API to change Safety Watchdog password.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   318   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   319   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   320   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   321   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   322   * \param newPassword Application specific new password to be changed for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   323   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   324   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   325  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   326  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   327  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   328   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   329   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   330   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   331   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   333   * \param reload Reload value for the timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   334   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   335   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   336  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   337  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   338  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   339   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   340   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   341   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   342   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   343   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   347  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   351   * after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   352   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   353   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   357  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   358  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   359   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   360   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   361   *   periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   362   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   363   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   366  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   368  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   370   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   371   * periodically after this API call.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   372   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   373   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   374   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   375   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   376  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   377  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   378  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   379   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   380   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   381   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   382   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   383   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   384   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   385  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   386  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   387  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   388   * \return Endinit status for the CPU Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   389   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   390  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   391  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   392  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   393   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   394   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   395   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   396   * or store the password globally in a global variable at the application memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   397   * \return password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   398   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   399  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   400  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   401  /** \brief SCUWDT API to service CPU Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   402   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   403   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   404   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   405   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   406   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   407   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   408   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   409  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   410  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   411  /** \brief SCUWDT API to service Safety Watchdog functionality.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   412   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   413   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   414   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   415   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   416   * \param password Existing (Application specific) password for the Watchdog module.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   417   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   418   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   419  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   420  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   421  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   422  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   423  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   424  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   425  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   426  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   427  /** \brief Enables the watchdog functionality with debugger connected,\n
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   428   * debug interface will also be enabled, if not enabled already.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   429   * \return Status, Success = 0, Failure = 1.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   430   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   431  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   432  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   433  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   434  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   435  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   436  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   437  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   438  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   439      if (watchdog->CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   440      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   441          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   442          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   443                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   444                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   445                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   446      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   447  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   448      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   449      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   450                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   451                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   452                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   453  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   454      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   455      while (watchdog->CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   456      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   457  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   458  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   459  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   460  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   461  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   462      if (SCU_WDTS_CON0.B.LCK)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   463      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   464          /* see Table 1 (Password Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   465          SCU_WDTS_CON0.U = (1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   466                            (0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   467                            (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   468                            (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   469      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   470  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   471      /* Clear ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   472      SCU_WDTS_CON0.U = (0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   473                        (1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   474                        (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   475                        (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   476  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   477      /* read back ENDINIT and wait until it has been cleared */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   478      while (SCU_WDTS_CON0.B.ENDINIT == 1)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   479      {}
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   480  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   481  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   482  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   483  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   484  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   485      uint16 password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   486  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   487      /* Read Password from CON0 register
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   488       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   489       * to toggle them before returning password */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   490      password  = watchdog->CON0.B.PW;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   491      password ^= 0x003F;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   492  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   493      return password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   494  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   495  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   496  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   497  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   498  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   499      return (boolean)watchdog->CON0.B.ENDINIT;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   500  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   501  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   502  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   503  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   504  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   505      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   506  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   507  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   508  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   509  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   510  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   511      uint16        password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   512      Ifx_SCU_WDTS *watchdog = &MODULE_SCU.WDTS;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   513  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   514      /* Read Password from Safety WDT CON0 register
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   515       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   516       * to toggle them before returning password */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   517      password  = watchdog->CON0.B.PW;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   518      password ^= 0x003F;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   519  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   520      return password;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   521  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   522  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   523  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   524  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   525  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   526      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L245:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   526      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L27
.L246:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   527      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   528          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   529          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   530                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   531                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d15,d1,#2
	or	d15,#1
.L247:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   532                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L248:
	sha	d0,d0,#16
.L249:
	or	d15,d0
.L250:
	st.w	[a15],d15

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   526      if (watchdog->CON0.B.LCK)      (inlined)
.L27:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   533      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   534  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   535      /* Set ENDINT and set LCK bit in Config_0 register */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   536      watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   537                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   538                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sha	d1,#2
.L133:
	or	d15,d1,#3
.L251:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   539                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L252:
	sha	d0,d0,#16
.L253:
	or	d15,d0
.L254:
	st.w	[a15],d15
.L255:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   542      while (watchdog->CON0.B.ENDINIT == 0)      (inlined)
	j	.L28
.L29:
.L28:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   540  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   541      /* read back ENDINIT and wait until it has been set */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   542      while (watchdog->CON0.B.ENDINIT == 0)
	ld.w	d15,[a15]
.L256:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuWdt.h	   542      while (watchdog->CON0.B.ENDINIT == 0)      (inlined)
	jz.t	d15:0,.L29
.L116:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   130  CU.WDTCPU[1], wdtPassword);
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   131  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   132      /* Load Base Address of Trap Vector Table. */
	 movh.a	 a0,#@his(_SMALL_DATA_)
 lea	 a0,[a0]@los(_SMALL_DATA_)
.L257:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   133      __mtcr(CPU_BTV, (uint32)__TRAPTAB(1));
	 movh.a	 a1,#@his(_LITERAL_DATA_)
 lea	 a1,[a1]@los(_LITERAL_DATA_)
.L258:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   134  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   135      /* Load Base Address of Interrupt Vector Table. we will do this later in the program */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   136      __mtcr(CPU_BIV, (uint32)__INTTAB(1));
	 movh.a	 a8,#@his(_A8_DATA_)
 lea	 a8,[a8]@los(_A8_DATA_)
.L259:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   137  
	 movh.a	 a9,#@his(_A9_DATA_)
 lea	 a9,[a9]@los(_A9_DATA_)
.L260:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   138      /* Load interupt stack pointer. */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   139      __mtcr(CPU_ISP, (uint32)__ISTACK(1));
	movh.a	a15,#@his(__CSA1)
.L150:
	lea	a15,[a15]@los(__CSA1)
.L261:
	movh.a	a2,#@his(__CSA1_END)
	lea	a2,[a2]@los(__CSA1_END)
.L118:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   787  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   788  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   789  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   790  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   791      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   792  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   793  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   794  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   795  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   796  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   797      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   798  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   799  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   800  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   801  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   802  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   803      Ifx_CPU_CCNT ccnt;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   804  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   805      if (address == CPU_CCNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   806      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   807          ccnt.U = __mfcr(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   808      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   809      else if (address == CPU_ICNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   810      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   811          ccnt.U = __mfcr(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   812      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   813      else if (address == CPU_M1CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   814      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   815          ccnt.U = __mfcr(CPU_M1CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   816      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   817      else if (address == CPU_M2CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   818      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   819          ccnt.U = __mfcr(CPU_M2CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   820      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   821      else if (address == CPU_M3CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   822      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   823          ccnt.U = __mfcr(CPU_M3CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   824      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   825  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   826      return ccnt.B.CountValue;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   827  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   828  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   829  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   830  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   831  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   832      Ifx_CPU_CCNT ccnt;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   833  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   834      if (address == CPU_CCNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   835      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   836          ccnt.U = __mfcr(CPU_CCNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   837      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   838      else if (address == CPU_ICNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   839      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   840          ccnt.U = __mfcr(CPU_ICNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   841      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   842      else if (address == CPU_M1CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   843      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   844          ccnt.U = __mfcr(CPU_M1CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   845      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   846      else if (address == CPU_M2CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   847      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   848          ccnt.U = __mfcr(CPU_M2CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   849      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   850      else if (address == CPU_M3CNT)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   851      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   852          ccnt.U = __mfcr(CPU_M3CNT);
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   853      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   854  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   855      return ccnt.B.SOvf;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   856  }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   857  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   858  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   859  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   860  {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   861      uint32  k;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   862      uint32  nxt_cxi_val = 0;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   863      uint32 *prvCsa      = 0U;
	mov.a	a4,#0
.L152:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   864      uint32 *nxtCsa      = csaBegin;
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   865      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
	mov.d	d15,a2
.L262:
	mov.d	d0,a15
.L263:
	sub	d15,d0
.L264:
	mov	d0,#0
	addih	d0,d0,#1024
	mul.u	e4,d15,d0
.L153:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   866  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   867      for (k = 0; k < numOfCsa; k++)
	mov	d0,#0
.L154:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   867      for (k = 0; k < numOfCsa; k++)      (inlined)
	j	.L30
.L31:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   868      {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   869          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
	mov.d	d15,a15
.L265:
	insert	d15,d15,#0,#0,#28
.L266:
	sh	d1,d15,#-12
.L267:
	mov.d	d15,a15
.L268:
	mov.u	d2,#65535
	sh	d2,#6
.L269:
	and	d15,d2
.L270:
	sh	d15,#-6
.L155:
	or	d1,d15
.L271:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   871          if (k == 0)      (inlined)
	jne	d0,#0,.L32
.L272:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   870  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   871          if (k == 0)
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   872          {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   873              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
	mtcr	#65080,d1
	isync
.L273:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   873              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */      (inlined)
	j	.L33

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   871          if (k == 0)      (inlined)
.L32:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   874          }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   875          else
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   876          {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   877              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
	st.w	[a4],d1

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   875          else      (inlined)
.L33:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   878          }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   879  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   880          if (k == (numOfCsa - 3U))
	add	d15,d5,#-3
.L274:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   880          if (k == (numOfCsa - 3U))      (inlined)
	jne	d15,d0,.L34
.L275:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   881          {
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   882              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
	mtcr	#65084,d1
	isync

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   880          if (k == (numOfCsa - 3U))      (inlined)
.L34:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   883          }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   884  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   885          prvCsa  = (uint32 *)nxtCsa;
	mov.aa	a4,a15
.L276:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   886          nxtCsa += 16;           /* next CSA */
	lea	a15,[a15]64
.L277:
	add	d0,#1

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   867      for (k = 0; k < numOfCsa; k++)      (inlined)
.L30:
	jlt.u	d0,d5,.L31
.L278:

; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   887      }
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   888  
; C:\Users\zxy\Desktop\new_car_v1.8\new_car_v1.4\image_processing1.0\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   889      *prvCsa = 0;
	mov	d15,#0
.L279:
	st.w	[a4],d15
.L119:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   140  uint32)__ISTACK(1));
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   141  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   142      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[1], wdtPassword);
	movh.a	a15,#@his(core1_main)
.L151:
	lea	a15,[a15]@los(core1_main)
		ji a15
.L280:

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   143  
	ret
.L46:
	
___Core1_start_function_end:
	.size	_Core1_start,___Core1_start_function_end-_Core1_start
.L45:
	; End of function
	
	.calls	'__INDIRECT__','core1_main'
	.extern	__ISTACK1
	.extern	__INTTAB_CPU1
	.extern	__TRAPTAB_CPU1
	.extern	__CSA1
	.extern	__CSA1_END
	.extern	core1_main
	.extern	__INDIRECT__
	.calls	'_Core1_start','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L38:
	.word	78027
	.half	3
	.word	.L39
	.byte	4
.L37:
	.byte	1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart\\IfxCpu_CStart1.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Debug\\',0,12,1
	.word	.L40
	.byte	2,1,1,3
	.word	202
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	205
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	250
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	262
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	374
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	348
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	380
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	380
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	348
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	489
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	489
	.byte	16,0,2,35,0,0,12,4,247,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	505
	.byte	4,2,35,0,0,7
	.byte	'unsigned char',0,1,8
.L49:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	641
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,4,255,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	680
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,137,9,16,4,11
	.byte	'AE',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	641
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,4,135,15,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	924
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,175,15,25,12,13
	.byte	'CON0',0
	.word	601
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	884
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1115
	.byte	4,2,35,8,0,14
	.word	1155
	.byte	3
	.word	1218
.L76:
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,181,3,17,1,1
.L79:
	.byte	5
	.byte	'watchdog',0,3,181,3,65
	.word	1223
.L81:
	.byte	5
	.byte	'password',0,3,181,3,82
	.word	658
.L83:
	.byte	6,0
.L88:
	.byte	4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,140,4,17,1,1
.L90:
	.byte	5
	.byte	'watchdog',0,3,140,4,63
	.word	1223
.L92:
	.byte	5
	.byte	'password',0,3,140,4,80
	.word	658
.L94:
	.byte	6,0
.L51:
	.byte	8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,227,3,19
	.word	658
	.byte	1,1
.L53:
	.byte	5
	.byte	'watchdog',0,3,227,3,74
	.word	1223
.L55:
	.byte	6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,6,143,3,16,4,11
	.byte	'P0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,6,181,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1453
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,6,169,2,16,4,11
	.byte	'PS0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	641
	.byte	1,0,2,35,3,0,12,6,133,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1769
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,6,110,16,4,11
	.byte	'MODREV',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,6,148,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2340
	.byte	4,2,35,0,0,15,4
	.word	641
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,6,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	641
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	641
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	641
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	641
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	641
	.byte	5,0,2,35,3,0,12,6,164,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2468
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,6,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	641
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	641
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	641
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	641
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	641
	.byte	5,0,2,35,3,0,12,6,180,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2683
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,6,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	641
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	641
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	641
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	641
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	641
	.byte	5,0,2,35,3,0,12,6,188,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2898
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,6,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	641
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	641
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	641
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	641
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	641
	.byte	5,0,2,35,3,0,12,6,172,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3115
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,6,118,16,4,11
	.byte	'P0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,6,156,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3335
	.byte	4,2,35,0,0,15,24
	.word	641
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,6,205,3,16,4,11
	.byte	'PD0',0,1
	.word	641
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	641
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	641
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	641
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	641
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	641
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	641
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	641
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	641
	.byte	1,0,2,35,3,0,12,6,205,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3658
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,6,226,3,16,4,11
	.byte	'PD8',0,1
	.word	641
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	641
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	641
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	641
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	641
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	641
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	641
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	641
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	641
	.byte	1,0,2,35,3,0,12,6,213,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3962
	.byte	4,2,35,0,0,15,8
	.word	641
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,6,88,16,4,11
	.byte	'EN0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,6,140,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4287
	.byte	4,2,35,0,0,15,12
	.word	641
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,6,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,6,197,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4627
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,6,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	466
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,12,6,189,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4993
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,6,206,2,16,4,11
	.byte	'PS0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	28,0,2,35,0,0,12,6,149,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5279
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,6,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	466
	.byte	24,0,2,35,0,0,12,6,165,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5426
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,6,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	466
	.byte	20,0,2,35,0,0,12,6,173,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5595
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,6,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	658
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,6,157,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5767
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,6,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	658
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	658
	.byte	12,0,2,35,2,0,12,6,229,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5942
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,6,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	8,0,2,35,3,0,12,6,245,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6116
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,6,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	641
	.byte	4,0,2,35,3,0,12,6,253,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6290
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,6,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	641
	.byte	1,0,2,35,3,0,12,6,237,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6466
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,6,249,2,16,4,11
	.byte	'PS0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,6,141,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6622
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,6,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	658
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	641
	.byte	1,0,2,35,3,0,12,6,221,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6955
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,6,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	466
	.byte	30,0,2,35,0,0,12,6,196,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7303
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,6,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	466
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,6,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	641
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	466
	.byte	24,0,2,35,0,0,12,6,204,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7427
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	7511
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,6,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	641
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,12,6,213,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7691
	.byte	4,2,35,0,0,15,76
	.word	641
	.byte	16,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,82,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	32,0,2,35,0,0,12,6,132,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7944
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,45,16,4,11
	.byte	'EN0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	641
	.byte	1,0,2,35,3,0,12,6,252,3,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8031
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,6,229,5,25,128,2,13
	.byte	'OUT',0
	.word	1729
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2300
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2419
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2459
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2643
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	2858
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3075
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3295
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2459
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3609
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3649
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	3922
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4238
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4278
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4578
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4618
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	4953
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5239
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4278
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5386
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5555
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5727
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	5902
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6076
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6250
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6426
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6582
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	6915
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7263
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4278
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	7387
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	7636
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	7895
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	7935
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	7991
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8558
	.byte	4,3,35,252,1,0,14
	.word	8598
	.byte	3
	.word	9201
	.byte	17,5,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,208,4,17,1,1,5
	.byte	'port',0,5,208,4,44
	.word	9206
	.byte	5
	.byte	'pinIndex',0,5,208,4,56
	.word	641
	.byte	5
	.byte	'action',0,5,208,4,80
	.word	9211
	.byte	6,0,17,8,156,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_none',0,2,0
.L70:
	.byte	8
	.byte	'IfxCpu_getCoreIndex',0,3,7,141,6,31
	.word	9392
	.byte	1,1
.L71:
	.byte	6,0
.L47:
	.byte	7
	.byte	'unsigned long int',0,4,7
.L127:
	.byte	3
	.word	9505
.L117:
	.byte	4
	.byte	'IfxCpu_initCSA',0,3,7,219,6,17,1,1
.L120:
	.byte	5
	.byte	'csaBegin',0,7,219,6,40
	.word	9526
.L122:
	.byte	5
	.byte	'csaEnd',0,7,219,6,58
	.word	9526
.L124:
	.byte	6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,139,5,20
	.word	641
	.byte	1,1,6,0
.L95:
	.byte	4
	.byte	'IfxCpu_setDataCache',0,3,7,177,7,17,1,1
.L98:
	.byte	5
	.byte	'enable',0,7,177,7,45
	.word	641
.L100:
	.byte	19
.L108:
	.byte	6,6,6,6,6,0,0
.L57:
	.byte	4
	.byte	'IfxCpu_setProgramCache',0,3,7,204,7,17,1,1
.L60:
	.byte	5
	.byte	'enable',0,7,204,7,48
	.word	641
.L62:
	.byte	19
.L63:
	.byte	6
.L67:
	.byte	19
.L84:
	.byte	6,0,6,6,6,6,0,0,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,161,6,19
	.word	9505
	.byte	1,1,5
	.byte	'address',0,7,161,6,55
	.word	658
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,190,6,20
	.word	641
	.byte	1,1,5
	.byte	'address',0,7,190,6,70
	.word	658
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,172,8,17,1,1,5
	.byte	'address',0,7,172,8,56
	.word	9505
	.byte	5
	.byte	'count',0,7,172,8,72
	.word	9505
	.byte	19,6,0,0,20
	.word	482
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	9952
	.byte	0,14
	.word	466
	.byte	3
	.word	466
	.byte	23
	.byte	'__cmpswapw',0
	.word	9994
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	9999
	.byte	24
	.byte	'value',0
	.word	466
	.byte	24
	.byte	'compare',0
	.word	466
	.byte	0,21
	.byte	'__mtcr',0,1,1,1,1,22
	.word	482
	.byte	22
	.word	482
	.byte	0,14
	.word	482
	.byte	23
	.byte	'__mfcr',0
	.word	10079
	.byte	1,1,1,1,22
	.word	482
	.byte	0,25
	.byte	'__isync',0,1,1,1,1,25
	.byte	'__dsync',0,1,1,1,1,26
	.word	210
	.byte	27
	.word	236
	.byte	6,0,26
	.word	271
	.byte	27
	.word	303
	.byte	6,0,26
	.word	316
	.byte	6,0,26
	.word	385
	.byte	27
	.word	404
	.byte	6,0,26
	.word	420
	.byte	27
	.word	435
	.byte	27
	.word	449
	.byte	6,0,26
	.word	1228
	.byte	27
	.word	1268
	.byte	27
	.word	1286
	.byte	6,0,26
	.word	1306
	.byte	27
	.word	1344
	.byte	27
	.word	1362
	.byte	6,0,26
	.word	1382
	.byte	27
	.word	1433
	.byte	6,0,26
	.word	9314
	.byte	27
	.word	9342
	.byte	27
	.word	9356
	.byte	27
	.word	9374
	.byte	6,0,26
	.word	9471
	.byte	6,0,26
	.word	9531
	.byte	27
	.word	9554
	.byte	27
	.word	9572
	.byte	6,0,26
	.word	9590
	.byte	6,0,26
	.word	9632
	.byte	27
	.word	9660
	.byte	19,19,28
	.word	1306
	.byte	27
	.word	1344
	.byte	27
	.word	1362
	.byte	29
	.word	1380
	.byte	0,0,28
	.word	9471
	.byte	29
	.word	9503
	.byte	0,6,28
	.word	1382
	.byte	27
	.word	1433
	.byte	29
	.word	1451
	.byte	0,6,28
	.word	1228
	.byte	27
	.word	1268
	.byte	27
	.word	1286
	.byte	29
	.word	1304
	.byte	0,6,6,0,0,26
	.word	9684
	.byte	27
	.word	9715
	.byte	19,6,19,19,28
	.word	1306
	.byte	27
	.word	1344
	.byte	27
	.word	1362
	.byte	29
	.word	1380
	.byte	0,0,28
	.word	9471
	.byte	29
	.word	9503
	.byte	0,28
	.word	1382
	.byte	27
	.word	1433
	.byte	29
	.word	1451
	.byte	0,28
	.word	1228
	.byte	27
	.word	1268
	.byte	27
	.word	1286
	.byte	29
	.word	1304
	.byte	0,0,6,6,6,6,0,0,26
	.word	9742
	.byte	27
	.word	9783
	.byte	6,0,26
	.word	9802
	.byte	27
	.word	9857
	.byte	6,0,26
	.word	9876
	.byte	27
	.word	9916
	.byte	27
	.word	9933
	.byte	19,6,0,0,10
	.byte	'_Ifx_CPU_PCON1_Bits',0,9,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	489
	.byte	30,0,2,35,0,0
.L65:
	.byte	12,9,159,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10513
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,9,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	489
	.byte	29,0,2,35,0,0
.L72:
	.byte	12,9,223,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10636
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON0_Bits',0,9,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	489
	.byte	30,0,2,35,0,0
.L86:
	.byte	12,9,151,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10745
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DCON0_Bits',0,9,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	489
	.byte	30,0,2,35,0,0
.L110:
	.byte	12,9,183,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10873
	.byte	4,2,35,0,0,30
	.byte	'core1_main',0,10,74,17,1,1,1,1,31
	.byte	'__INDIRECT__',0,10,1,1,1,1,1,7
	.byte	'short int',0,2,5,32
	.byte	'__wchar_t',0,10,1,1
	.word	11040
	.byte	32
	.byte	'__size_t',0,10,1,1
	.word	466
	.byte	32
	.byte	'__ptrdiff_t',0,10,1,1
	.word	482
	.byte	33,1,3
	.word	11108
	.byte	32
	.byte	'__codeptr',0,10,1,1
	.word	11110
	.byte	17,11,240,10,9,1,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,32
	.byte	'IfxScu_CCUCON0_CLKSEL',0,11,244,10,3
	.word	11133
	.byte	17,11,254,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,11,131,11,3
	.word	11230
	.byte	32
	.byte	'boolean',0,12,101,29
	.word	641
	.byte	32
	.byte	'uint8',0,12,105,29
	.word	641
	.byte	32
	.byte	'uint16',0,12,109,29
	.word	658
	.byte	32
	.byte	'uint32',0,12,113,29
	.word	9505
	.byte	32
	.byte	'uint64',0,12,118,29
	.word	348
	.byte	32
	.byte	'sint16',0,12,126,29
	.word	11040
	.byte	7
	.byte	'long int',0,4,5,32
	.byte	'sint32',0,12,131,1,29
	.word	11442
	.byte	7
	.byte	'long long int',0,8,5,32
	.byte	'sint64',0,12,138,1,29
	.word	11470
	.byte	32
	.byte	'float32',0,12,167,1,29
	.word	262
	.byte	32
	.byte	'pvoid',0,13,57,28
	.word	380
	.byte	32
	.byte	'Ifx_TickTime',0,13,79,28
	.word	11470
	.byte	17,13,130,1,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,32
	.byte	'Ifx_RxSel',0,13,140,1,3
	.word	11555
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,11
	.byte	'EN0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	11693
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	12250
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	466
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	12327
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	641
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	641
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	641
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	641
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	641
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	641
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	641
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	641
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	641
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	641
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	12463
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,11
	.byte	'CANDIV',0,1
	.word	641
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	641
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	641
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	641
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	641
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	641
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	641
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	641
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	12743
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	641
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	12981
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	641
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	641
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	641
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	641
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	641
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	13109
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	641
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	641
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	641
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	641
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	641
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	13352
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	641
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	13587
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	466
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	13715
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	466
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	13815
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	641
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	641
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	641
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	641
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,202,1,3
	.word	13915
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,205,1,16,4,11
	.byte	'PWD',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	466
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,213,1,3
	.word	14123
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	658
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	641
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	658
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	641
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,225,1,3
	.word	14288
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	658
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	641
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,235,1,3
	.word	14471
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	641
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	641
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	466
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	641
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	641
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,4,129,2,3
	.word	14625
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	466
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,4,143,2,3
	.word	14989
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,146,2,16,4,11
	.byte	'POL',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	658
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	641
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	641
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	641
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	641
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,4,159,2,3
	.word	15200
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	658
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	466
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,167,2,3
	.word	15452
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,170,2,16,4,11
	.byte	'ARI',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	466
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,175,2,3
	.word	15570
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,185,2,3
	.word	15681
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,195,2,3
	.word	15844
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,205,2,3
	.word	16007
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,215,2,3
	.word	16165
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	641
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	641
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	641
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	641
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	641
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	641
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	641
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	641
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	641
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	641
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	658
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,232,2,3
	.word	16330
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	658
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	641
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	641
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	658
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	641
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,245,2,3
	.word	16659
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,255,2,3
	.word	16880
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	466
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,142,3,3
	.word	17043
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,152,3,3
	.word	17315
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,162,3,3
	.word	17468
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,172,3,3
	.word	17624
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,181,3,3
	.word	17786
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,191,3,3
	.word	17929
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,200,3,3
	.word	18094
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	658
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	641
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	641
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,211,3,3
	.word	18239
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	641
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,222,3,3
	.word	18420
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,232,3,3
	.word	18594
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	641
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	466
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,241,3,3
	.word	18754
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	466
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,130,4,3
	.word	18898
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,139,4,3
	.word	19172
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,149,4,3
	.word	19311
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,152,4,16,4,11
	.byte	'EN0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	641
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	658
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	641
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	641
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	641
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,163,4,3
	.word	19474
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,166,4,16,4,11
	.byte	'STEP',0,2
	.word	658
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	641
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	641
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	658
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	641
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,4,174,4,3
	.word	19692
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,177,4,16,4,11
	.byte	'FS0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,4,197,4,3
	.word	19855
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,4,205,4,3
	.word	20191
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	641
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	641
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,4,232,4,3
	.word	20298
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,235,4,16,4,11
	.byte	'P0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	466
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,4,240,4,3
	.word	20750
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	641
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	641
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,4,250,4,3
	.word	20849
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	658
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,131,5,3
	.word	20999
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,134,5,16,4,11
	.byte	'SEED',0,4
	.word	466
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	641
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	641
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,141,5,3
	.word	21148
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	466
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,149,5,3
	.word	21309
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	658
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	658
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,158,5,3
	.word	21439
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	466
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,166,5,3
	.word	21571
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	641
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	658
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,4,174,5,3
	.word	21686
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,177,5,16,4,11
	.byte	'PS0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	658
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	658
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,4,185,5,3
	.word	21797
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	641
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	641
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	641
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	641
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	641
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	641
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,209,5,3
	.word	21955
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,212,5,16,4,11
	.byte	'P0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	466
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,4,217,5,3
	.word	22367
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	658
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	641
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	641
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,233,5,3
	.word	22468
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	466
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,242,5,3
	.word	22735
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	466
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,4,250,5,3
	.word	22871
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,253,5,16,4,11
	.byte	'PD0',0,1
	.word	641
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	641
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	466
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,4,132,6,3
	.word	22982
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	466
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,4,146,6,3
	.word	23115
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	658
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	641
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	641
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	641
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	641
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,166,6,3
	.word	23318
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	641
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	641
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	641
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	658
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,177,6,3
	.word	23674
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	658
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,184,6,3
	.word	23852
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	658
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	641
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	641
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	641
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	641
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	641
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,204,6,3
	.word	23952
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	641
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	641
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	641
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	641
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	658
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,215,6,3
	.word	24322
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	466
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,227,6,3
	.word	24508
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	466
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,241,6,3
	.word	24706
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	641
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	641
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	641
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	466
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,251,6,3
	.word	24939
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	641
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	641
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	641
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	641
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	641
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	641
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,153,7,3
	.word	25091
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	641
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	641
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	641
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	641
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,170,7,3
	.word	25658
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,4,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	641
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	641
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	641
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,4,187,7,3
	.word	25952
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	641
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	641
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	658
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	641
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	26230
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	658
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,230,7,3
	.word	26726
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	658
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,243,7,3
	.word	27039
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	641
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	641
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	641
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	641
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	641
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	641
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	641
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	641
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,129,8,3
	.word	27248
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	641
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	641
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	641
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,155,8,3
	.word	27459
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,158,8,16,4,11
	.byte	'HBT',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	466
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,162,8,3
	.word	27891
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	641
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	641
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	641
	.byte	7,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,178,8,3
	.word	27987
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	466
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,186,8,3
	.word	28247
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	641
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	641
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	466
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,198,8,3
	.word	28372
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,208,8,3
	.word	28569
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,218,8,3
	.word	28722
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,228,8,3
	.word	28875
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,238,8,3
	.word	29028
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,247,8,3
	.word	505
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,134,9,3
	.word	680
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,150,9,3
	.word	924
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	489
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,159,9,3
	.word	29283
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	641
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,175,9,3
	.word	29409
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,178,9,16,4,11
	.byte	'AE',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	641
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,191,9,3
	.word	29661
	.byte	12,4,199,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11693
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN0',0,4,204,9,3
	.word	29880
	.byte	12,4,207,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12250
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1',0,4,212,9,3
	.word	29944
	.byte	12,4,215,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12327
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,4,220,9,3
	.word	30008
	.byte	12,4,223,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12463
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,4,228,9,3
	.word	30073
	.byte	12,4,231,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12743
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,4,236,9,3
	.word	30138
	.byte	12,4,239,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12981
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,4,244,9,3
	.word	30203
	.byte	12,4,247,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13109
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,4,252,9,3
	.word	30268
	.byte	12,4,255,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13352
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,4,132,10,3
	.word	30333
	.byte	12,4,135,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13587
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,4,140,10,3
	.word	30398
	.byte	12,4,143,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13715
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,4,148,10,3
	.word	30463
	.byte	12,4,151,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13815
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,4,156,10,3
	.word	30528
	.byte	12,4,159,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13915
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,4,164,10,3
	.word	30593
	.byte	12,4,167,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14123
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCON',0,4,172,10,3
	.word	30657
	.byte	12,4,175,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14288
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSLIM',0,4,180,10,3
	.word	30721
	.byte	12,4,183,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14471
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSSTAT',0,4,188,10,3
	.word	30785
	.byte	12,4,191,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14625
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,4,196,10,3
	.word	30850
	.byte	12,4,199,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14989
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,4,204,10,3
	.word	30912
	.byte	12,4,207,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15200
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,4,212,10,3
	.word	30974
	.byte	12,4,215,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15452
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG',0,4,220,10,3
	.word	31036
	.byte	12,4,223,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15570
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,4,228,10,3
	.word	31100
	.byte	12,4,231,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15681
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR13CON',0,4,236,10,3
	.word	31165
	.byte	12,4,239,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15844
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR33CON',0,4,244,10,3
	.word	31231
	.byte	12,4,247,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16007
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,252,10,3
	.word	31297
	.byte	12,4,255,10,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16165
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,132,11,3
	.word	31365
	.byte	12,4,135,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16330
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,140,11,3
	.word	31432
	.byte	12,4,143,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16659
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,148,11,3
	.word	31500
	.byte	12,4,151,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16880
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROVMON',0,4,156,11,3
	.word	31568
	.byte	12,4,159,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17043
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRRSTCON',0,4,164,11,3
	.word	31634
	.byte	12,4,167,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17315
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,172,11,3
	.word	31701
	.byte	12,4,175,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17468
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,180,11,3
	.word	31770
	.byte	12,4,183,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17624
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,188,11,3
	.word	31839
	.byte	12,4,191,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17786
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,196,11,3
	.word	31908
	.byte	12,4,199,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17929
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,204,11,3
	.word	31977
	.byte	12,4,207,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18094
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,212,11,3
	.word	32046
	.byte	12,4,215,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18239
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,220,11,3
	.word	32115
	.byte	12,4,223,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18420
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,11,3
	.word	32183
	.byte	12,4,231,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18594
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,236,11,3
	.word	32251
	.byte	12,4,239,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18754
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,244,11,3
	.word	32319
	.byte	12,4,247,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18898
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT',0,4,252,11,3
	.word	32387
	.byte	12,4,255,11,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19172
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRTRIM',0,4,132,12,3
	.word	32452
	.byte	12,4,135,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19311
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRUVMON',0,4,140,12,3
	.word	32517
	.byte	12,4,143,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19474
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,4,148,12,3
	.word	32583
	.byte	12,4,151,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19692
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,4,156,12,3
	.word	32647
	.byte	12,4,159,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19855
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,4,164,12,3
	.word	32708
	.byte	12,4,167,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20191
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,4,172,12,3
	.word	32769
	.byte	12,4,175,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20298
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,4,180,12,3
	.word	32829
	.byte	12,4,183,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20750
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,4,188,12,3
	.word	32891
	.byte	12,4,191,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20849
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,4,196,12,3
	.word	32951
	.byte	12,4,199,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20999
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,204,12,3
	.word	33013
	.byte	12,4,207,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21148
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,212,12,3
	.word	33081
	.byte	12,4,215,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21309
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,220,12,3
	.word	33149
	.byte	12,4,223,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21439
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON',0,4,228,12,3
	.word	33217
	.byte	12,4,231,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21571
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,4,236,12,3
	.word	33281
	.byte	12,4,239,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21686
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,4,244,12,3
	.word	33346
	.byte	12,4,247,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21797
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,4,252,12,3
	.word	33409
	.byte	12,4,255,12,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21955
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,4,132,13,3
	.word	33470
	.byte	12,4,135,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22367
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,4,140,13,3
	.word	33534
	.byte	12,4,143,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22468
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,4,148,13,3
	.word	33595
	.byte	12,4,151,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22735
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,4,156,13,3
	.word	33659
	.byte	12,4,159,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22871
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,4,164,13,3
	.word	33726
	.byte	12,4,167,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22982
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,4,172,13,3
	.word	33789
	.byte	12,4,175,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23115
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,4,180,13,3
	.word	33850
	.byte	12,4,183,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23318
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON0',0,4,188,13,3
	.word	33912
	.byte	12,4,191,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23674
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON1',0,4,196,13,3
	.word	33977
	.byte	12,4,199,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23852
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON2',0,4,204,13,3
	.word	34042
	.byte	12,4,207,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23952
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,212,13,3
	.word	34107
	.byte	12,4,215,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24322
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,220,13,3
	.word	34176
	.byte	12,4,223,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24508
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,228,13,3
	.word	34245
	.byte	12,4,231,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24706
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT',0,4,236,13,3
	.word	34314
	.byte	12,4,239,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24939
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR',0,4,244,13,3
	.word	34379
	.byte	12,4,247,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25091
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR0',0,4,252,13,3
	.word	34442
	.byte	12,4,255,13,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25658
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,4,132,14,3
	.word	34507
	.byte	12,4,135,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25952
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR2',0,4,140,14,3
	.word	34572
	.byte	12,4,143,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26230
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTAT',0,4,148,14,3
	.word	34637
	.byte	12,4,151,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26726
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,156,14,3
	.word	34703
	.byte	12,4,159,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27248
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,4,164,14,3
	.word	34772
	.byte	12,4,167,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27039
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,4,172,14,3
	.word	34836
	.byte	12,4,175,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27459
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,4,180,14,3
	.word	34901
	.byte	12,4,183,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27891
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON',0,4,188,14,3
	.word	34966
	.byte	12,4,191,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27987
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,4,196,14,3
	.word	35031
	.byte	12,4,199,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28247
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,4,204,14,3
	.word	35095
	.byte	12,4,207,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28372
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,4,212,14,3
	.word	35161
	.byte	12,4,215,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28569
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,4,220,14,3
	.word	35225
	.byte	12,4,223,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28722
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS',0,4,228,14,3
	.word	35290
	.byte	12,4,231,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28875
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,4,236,14,3
	.word	35355
	.byte	12,4,239,14,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29028
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,4,244,14,3
	.word	35420
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,252,14,3
	.word	601
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,132,15,3
	.word	884
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,140,15,3
	.word	1115
	.byte	12,4,143,15,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29283
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,4,148,15,3
	.word	35571
	.byte	12,4,151,15,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29409
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,4,156,15,3
	.word	35638
	.byte	12,4,159,15,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29661
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,4,164,15,3
	.word	35705
	.byte	14
	.word	1155
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,4,180,15,3
	.word	35770
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,183,15,25,12,13
	.byte	'CON0',0
	.word	35571
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	35638
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	35705
	.byte	4,2,35,8,0,14
	.word	35799
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,4,188,15,3
	.word	35860
	.byte	15,8
	.word	31036
	.byte	16,1,0,15,20
	.word	641
	.byte	16,19,0,15,8
	.word	34379
	.byte	16,1,0,14
	.word	35799
	.byte	15,24
	.word	1155
	.byte	16,1,0,14
	.word	35919
	.byte	15,16
	.word	641
	.byte	16,15,0,15,28
	.word	641
	.byte	16,27,0,15,40
	.word	641
	.byte	16,39,0,15,16
	.word	30850
	.byte	16,3,0,15,16
	.word	32829
	.byte	16,3,0,15,180,3
	.word	641
	.byte	16,179,3,0,10
	.byte	'_Ifx_SCU',0,4,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	4278
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	32769
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2459
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	33470
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	34314
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	33912
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	33977
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	34042
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	34245
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	34107
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	34176
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	30073
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	30138
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	32647
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	32583
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	30203
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	30268
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	30333
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	30398
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	34901
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2459
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	34772
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	30008
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	35095
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	34836
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	2459
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	31634
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	35887
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	31100
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	35161
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	30463
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	30528
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	35896
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	33789
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	32951
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	33534
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	33409
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	32891
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	32387
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	31365
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	31165
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	31231
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	35031
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	2459
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	34442
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	34637
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	34703
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	35905
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	2459
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	30785
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	30657
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	34507
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	34572
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	35914
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	30974
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	35928
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	4618
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	35420
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	35355
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	35225
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	35290
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	2459
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	33217
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	33281
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	30593
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	33346
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	4278
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	34966
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	35933
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	33013
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	33081
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	33149
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	35942
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	33726
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4278
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	32452
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	31297
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	32517
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	31568
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	31432
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	2459
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	32115
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	32183
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	32251
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	32319
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	31701
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	31770
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	31839
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	31908
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	31977
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	32046
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	31500
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	2459
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	33659
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	33595
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	35951
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	35960
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	30912
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	32708
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	33850
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	35969
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	2459
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	30721
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	35978
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	29944
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	29880
	.byte	4,3,35,252,7,0,14
	.word	35989
	.byte	32
	.byte	'Ifx_SCU',0,4,181,16,3
	.word	37979
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,9,45,16,4,11
	.byte	'ADDR',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,9,48,3
	.word	38001
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,9,51,16,4,11
	.byte	'VSS',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	489
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,9,55,3
	.word	38062
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,9,58,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	489
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,9,62,3
	.word	38141
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,9,65,16,4,11
	.byte	'CountValue',0,4
	.word	489
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	489
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,9,69,3
	.word	38227
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,9,72,16,4,11
	.byte	'CM',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	489
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	489
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	489
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	489
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,9,80,3
	.word	38316
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,9,83,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	489
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,9,89,3
	.word	38462
	.byte	32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,9,96,3
	.word	10636
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,9,99,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	489
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,9,103,3
	.word	38618
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,9,106,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	489
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,9,110,3
	.word	38711
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,9,113,16,4,11
	.byte	'MODREV',0,4
	.word	489
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	489
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,9,118,3
	.word	38804
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,9,121,16,4,11
	.byte	'XE',0,4
	.word	489
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	489
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,9,125,3
	.word	38911
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,9,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	489
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	489
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	489
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,9,136,1,3
	.word	38998
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,9,139,1,16,4,11
	.byte	'CID',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	489
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,9,143,1,3
	.word	39152
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,9,146,1,16,4,11
	.byte	'DATA',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,9,149,1,3
	.word	39246
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,9,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	489
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	489
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	489
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	489
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	489
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	489
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,9,163,1,3
	.word	39309
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,9,166,1,16,4,11
	.byte	'DE',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	489
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	489
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	489
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	489
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	489
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	489
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,9,177,1,3
	.word	39527
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,9,180,1,16,4,11
	.byte	'DTA',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	489
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,9,184,1,3
	.word	39742
	.byte	32
	.byte	'Ifx_CPU_DCON0_Bits',0,9,192,1,3
	.word	10873
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,9,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	489
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,9,199,1,3
	.word	39864
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,9,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	489
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,9,206,1,3
	.word	39965
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,9,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,9,212,1,3
	.word	40058
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,9,215,1,16,4,11
	.byte	'TA',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,9,218,1,3
	.word	40138
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,9,221,1,16,4,11
	.byte	'IED',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	489
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	489
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	489
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	489
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	489
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	489
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,9,233,1,3
	.word	40207
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,9,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	489
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,9,240,1,3
	.word	40436
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,9,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	489
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,9,247,1,3
	.word	40529
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,9,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	489
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,9,254,1,3
	.word	40624
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,9,129,2,16,4,11
	.byte	'RE',0,4
	.word	489
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,9,133,2,3
	.word	40719
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,9,136,2,16,4,11
	.byte	'WE',0,4
	.word	489
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,9,140,2,3
	.word	40809
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,9,143,2,16,4,11
	.byte	'SRE',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	489
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	489
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	489
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	489
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	489
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	489
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	489
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	489
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	489
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	489
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	489
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	489
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	489
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	489
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,9,161,2,3
	.word	40899
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,9,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	489
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	489
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	489
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,9,172,2,3
	.word	41223
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,9,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	489
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	489
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	489
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,9,180,2,3
	.word	41377
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,9,183,2,16,4,11
	.byte	'TST',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	489
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	489
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	489
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	489
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	489
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	489
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	489
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	489
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	489
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	489
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	489
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	489
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	489
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	489
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	489
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,9,202,2,3
	.word	41483
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,9,205,2,16,4,11
	.byte	'OPC',0,4
	.word	489
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	489
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	489
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	489
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	489
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,9,212,2,3
	.word	41832
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,9,215,2,16,4,11
	.byte	'PC',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,9,218,2,3
	.word	41992
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,9,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,9,224,2,3
	.word	42073
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,9,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,9,230,2,3
	.word	42160
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,9,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,9,236,2,3
	.word	42247
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,9,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	489
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	489
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,9,243,2,3
	.word	42334
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,9,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	489
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	489
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	489
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	489
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	489
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICR_Bits',0,9,253,2,3
	.word	42425
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,9,128,3,16,4,11
	.byte	'ISP',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,9,131,3,3
	.word	42568
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,9,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	489
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	489
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	489
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,9,139,3,3
	.word	42634
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,9,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	489
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	489
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,9,146,3,3
	.word	42740
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,9,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	489
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	489
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,9,153,3,3
	.word	42833
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,9,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	489
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	489
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,9,160,3,3
	.word	42926
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,9,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	489
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,9,167,3,3
	.word	43019
	.byte	32
	.byte	'Ifx_CPU_PCON0_Bits',0,9,175,3,3
	.word	10745
	.byte	32
	.byte	'Ifx_CPU_PCON1_Bits',0,9,183,3,3
	.word	10513
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,9,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	489
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,9,190,3,3
	.word	43160
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,9,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	489
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	489
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	489
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	489
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	489
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,9,200,3,3
	.word	43261
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,9,203,3,16,4,11
	.byte	'TA',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,9,206,3,3
	.word	43391
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,9,209,3,16,4,11
	.byte	'IED',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	489
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	489
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	489
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	489
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	489
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	489
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,9,221,3,3
	.word	43460
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,9,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	489
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,9,229,3,3
	.word	43689
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,9,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	489
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	489
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,9,237,3,3
	.word	43802
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,9,240,3,16,4,11
	.byte	'PSI',0,4
	.word	489
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	489
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,9,244,3,3
	.word	43915
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,9,247,3,16,4,11
	.byte	'FRE',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	489
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	489
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	489
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	489
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	489
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	489
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,9,129,4,3
	.word	44006
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,9,132,4,16,4,11
	.byte	'CDC',0,4
	.word	489
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	489
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	489
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	489
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	489
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	489
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	489
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	489
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	489
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	489
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	489
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	489
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	489
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,9,147,4,3
	.word	44209
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,9,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	489
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	489
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	489
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	489
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,9,156,4,3
	.word	44452
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,9,159,4,16,4,11
	.byte	'PC',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	489
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	489
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	489
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	489
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	489
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	489
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	489
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	489
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,9,171,4,3
	.word	44580
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,9,174,4,16,4,11
	.byte	'EN',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,9,177,4,3
	.word	44821
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,9,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,9,183,4,3
	.word	44904
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,9,186,4,16,4,11
	.byte	'EN',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,9,189,4,3
	.word	44995
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,9,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,9,195,4,3
	.word	45086
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,9,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	466
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,9,202,4,3
	.word	45185
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,9,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	466
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,9,209,4,3
	.word	45292
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,9,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	489
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	489
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	489
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,9,220,4,3
	.word	45399
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,9,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	489
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	489
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,9,231,4,3
	.word	45553
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,9,234,4,16,4,11
	.byte	'ASI',0,4
	.word	489
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	489
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,9,238,4,3
	.word	45714
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,9,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	489
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	489
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	489
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	489
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,9,249,4,3
	.word	45812
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,9,252,4,16,4,11
	.byte	'Timer',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,9,255,4,3
	.word	45984
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,9,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	489
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,9,133,5,3
	.word	46064
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,9,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	489
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	489
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	489
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	489
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	489
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	489
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	489
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	489
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	489
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	489
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	489
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	489
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	489
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,9,153,5,3
	.word	46137
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,9,156,5,16,4,11
	.byte	'T0',0,4
	.word	489
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	489
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	489
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	489
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	489
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	489
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	489
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	489
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	489
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,9,167,5,3
	.word	46455
	.byte	12,9,175,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38001
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,9,180,5,3
	.word	46650
	.byte	12,9,183,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38062
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,9,188,5,3
	.word	46709
	.byte	12,9,191,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38141
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,9,196,5,3
	.word	46770
	.byte	12,9,199,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38227
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,9,204,5,3
	.word	46831
	.byte	12,9,207,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38316
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,9,212,5,3
	.word	46893
	.byte	12,9,215,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38462
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,9,220,5,3
	.word	46956
	.byte	32
	.byte	'Ifx_CPU_CORE_ID',0,9,228,5,3
	.word	10705
	.byte	12,9,231,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38618
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,9,236,5,3
	.word	47045
	.byte	12,9,239,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38711
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,9,244,5,3
	.word	47108
	.byte	12,9,247,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38804
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,9,252,5,3
	.word	47171
	.byte	12,9,255,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38911
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,9,132,6,3
	.word	47235
	.byte	12,9,135,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38998
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,9,140,6,3
	.word	47297
	.byte	12,9,143,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39152
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,9,148,6,3
	.word	47360
	.byte	12,9,151,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39246
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,9,156,6,3
	.word	47424
	.byte	12,9,159,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39309
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,9,164,6,3
	.word	47483
	.byte	12,9,167,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39527
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,9,172,6,3
	.word	47545
	.byte	12,9,175,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39742
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,9,180,6,3
	.word	47608
	.byte	32
	.byte	'Ifx_CPU_DCON0',0,9,188,6,3
	.word	10961
	.byte	12,9,191,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39864
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,9,196,6,3
	.word	47695
	.byte	12,9,199,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39965
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,9,204,6,3
	.word	47758
	.byte	12,9,207,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40058
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,9,212,6,3
	.word	47819
	.byte	12,9,215,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40138
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,9,220,6,3
	.word	47882
	.byte	12,9,223,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40207
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,9,228,6,3
	.word	47945
	.byte	12,9,231,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40436
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,9,236,6,3
	.word	48008
	.byte	12,9,239,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40529
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,9,244,6,3
	.word	48069
	.byte	12,9,247,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40624
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,9,252,6,3
	.word	48132
	.byte	12,9,255,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40719
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,9,132,7,3
	.word	48195
	.byte	12,9,135,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40809
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,9,140,7,3
	.word	48257
	.byte	12,9,143,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40899
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,9,148,7,3
	.word	48319
	.byte	12,9,151,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41223
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,9,156,7,3
	.word	48381
	.byte	12,9,159,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41377
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,9,164,7,3
	.word	48444
	.byte	12,9,167,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41483
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,9,172,7,3
	.word	48505
	.byte	12,9,175,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41832
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,9,180,7,3
	.word	48575
	.byte	12,9,183,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41992
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,9,188,7,3
	.word	48645
	.byte	12,9,191,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42073
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,9,196,7,3
	.word	48714
	.byte	12,9,199,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42160
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,9,204,7,3
	.word	48785
	.byte	12,9,207,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42247
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,9,212,7,3
	.word	48856
	.byte	12,9,215,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42334
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,9,220,7,3
	.word	48927
	.byte	12,9,223,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42425
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICR',0,9,228,7,3
	.word	48989
	.byte	12,9,231,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42568
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,9,236,7,3
	.word	49050
	.byte	12,9,239,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42634
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,9,244,7,3
	.word	49111
	.byte	12,9,247,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42740
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,9,252,7,3
	.word	49172
	.byte	12,9,255,7,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42833
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,9,132,8,3
	.word	49235
	.byte	12,9,135,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42926
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,9,140,8,3
	.word	49298
	.byte	12,9,143,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43019
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,9,148,8,3
	.word	49361
	.byte	32
	.byte	'Ifx_CPU_PCON0',0,9,156,8,3
	.word	10833
	.byte	32
	.byte	'Ifx_CPU_PCON1',0,9,164,8,3
	.word	10596
	.byte	12,9,167,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43160
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,9,172,8,3
	.word	49467
	.byte	12,9,175,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43261
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,9,180,8,3
	.word	49530
	.byte	12,9,183,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43391
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,9,188,8,3
	.word	49592
	.byte	12,9,191,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43460
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,9,196,8,3
	.word	49655
	.byte	12,9,199,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43689
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,9,204,8,3
	.word	49718
	.byte	12,9,207,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43802
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,9,212,8,3
	.word	49780
	.byte	12,9,215,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43915
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,9,220,8,3
	.word	49842
	.byte	12,9,223,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44006
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,9,228,8,3
	.word	49904
	.byte	12,9,231,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44209
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,9,236,8,3
	.word	49966
	.byte	12,9,239,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44452
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,9,244,8,3
	.word	50027
	.byte	12,9,247,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44580
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,9,252,8,3
	.word	50090
	.byte	12,9,255,8,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44821
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA',0,9,132,9,3
	.word	50154
	.byte	12,9,135,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44904
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB',0,9,140,9,3
	.word	50224
	.byte	12,9,143,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44995
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,9,148,9,3
	.word	50294
	.byte	12,9,151,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45086
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,9,156,9,3
	.word	50368
	.byte	12,9,159,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45185
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,9,164,9,3
	.word	50442
	.byte	12,9,167,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45292
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,9,172,9,3
	.word	50512
	.byte	12,9,175,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45399
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,9,180,9,3
	.word	50582
	.byte	12,9,183,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45553
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,9,188,9,3
	.word	50645
	.byte	12,9,191,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45714
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,9,196,9,3
	.word	50709
	.byte	12,9,199,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45812
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,9,204,9,3
	.word	50775
	.byte	12,9,207,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45984
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,9,212,9,3
	.word	50840
	.byte	12,9,215,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46064
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,9,220,9,3
	.word	50907
	.byte	12,9,223,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46137
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,9,228,9,3
	.word	50971
	.byte	12,9,231,9,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46455
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,9,236,9,3
	.word	51035
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,9,247,9,25,8,13
	.byte	'L',0
	.word	47045
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	47108
	.byte	4,2,35,4,0,14
	.word	51101
	.byte	32
	.byte	'Ifx_CPU_CPR',0,9,251,9,3
	.word	51143
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,9,254,9,25,8,13
	.byte	'L',0
	.word	48069
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	48132
	.byte	4,2,35,4,0,14
	.word	51169
	.byte	32
	.byte	'Ifx_CPU_DPR',0,9,130,10,3
	.word	51211
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,9,133,10,25,16,13
	.byte	'LA',0
	.word	50442
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	50512
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	50294
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	50368
	.byte	4,2,35,12,0,14
	.word	51237
	.byte	32
	.byte	'Ifx_CPU_SPROT_RGN',0,9,139,10,3
	.word	51319
	.byte	15,12
	.word	50840
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,9,142,10,25,16,13
	.byte	'CON',0
	.word	50775
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	51351
	.byte	12,2,35,4,0,14
	.word	51360
	.byte	32
	.byte	'Ifx_CPU_TPS',0,9,146,10,3
	.word	51408
	.byte	10
	.byte	'_Ifx_CPU_TR',0,9,149,10,25,8,13
	.byte	'EVT',0
	.word	50971
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	50907
	.byte	4,2,35,4,0,14
	.word	51434
	.byte	32
	.byte	'Ifx_CPU_TR',0,9,153,10,3
	.word	51479
	.byte	15,176,32
	.word	641
	.byte	16,175,32,0,15,208,223,1
	.word	641
	.byte	16,207,223,1,0,15,248,1
	.word	641
	.byte	16,247,1,0,15,244,29
	.word	641
	.byte	16,243,29,0,15,188,3
	.word	641
	.byte	16,187,3,0,15,232,3
	.word	641
	.byte	16,231,3,0,15,252,23
	.word	641
	.byte	16,251,23,0,15,228,63
	.word	641
	.byte	16,227,63,0,15,128,1
	.word	51169
	.byte	16,15,0,14
	.word	51594
	.byte	15,128,31
	.word	641
	.byte	16,255,30,0,15,64
	.word	51101
	.byte	16,7,0,14
	.word	51620
	.byte	15,192,31
	.word	641
	.byte	16,191,31,0,15,16
	.word	47235
	.byte	16,3,0,15,16
	.word	48195
	.byte	16,3,0,15,16
	.word	48257
	.byte	16,3,0,15,208,7
	.word	641
	.byte	16,207,7,0,14
	.word	51360
	.byte	15,240,23
	.word	641
	.byte	16,239,23,0,15,64
	.word	51434
	.byte	16,7,0,14
	.word	51699
	.byte	15,192,23
	.word	641
	.byte	16,191,23,0,15,232,1
	.word	641
	.byte	16,231,1,0,15,180,1
	.word	641
	.byte	16,179,1,0,15,172,1
	.word	641
	.byte	16,171,1,0,15,64
	.word	47424
	.byte	16,15,0,15,64
	.word	641
	.byte	16,63,0,15,64
	.word	46650
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,9,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	51504
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	50027
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	51515
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	50709
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	51528
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	49718
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	49780
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	49842
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	51539
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	47695
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	4278
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	50090
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	48319
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	2459
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	47483
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	47819
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	47882
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	47945
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	3649
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	10961
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	51550
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	49904
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	10596
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	49467
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	10833
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	49592
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	49655
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	51561
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	46956
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	51572
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	48505
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	48645
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	48575
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	2459
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	48714
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	48785
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	48856
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	51583
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	51604
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	51609
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	51629
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	51634
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	51645
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	51654
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	51663
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	51672
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	51683
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	51688
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	51708
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	51713
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	46893
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	46831
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	48927
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	49172
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	49235
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	49298
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	51724
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	47545
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	2459
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	48381
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	47297
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	50582
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	35942
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	51035
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	4618
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	48008
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	47758
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	47608
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	51735
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	49530
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	49966
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	49361
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	4278
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	50645
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	47171
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	10705
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	46709
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	46770
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	49050
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	48989
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	4278
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	48444
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	49111
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	35933
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	47360
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	51746
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	51757
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	51766
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	51775
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	51766
	.byte	64,4,35,192,255,3,0,14
	.word	51784
	.byte	32
	.byte	'Ifx_CPU',0,9,130,11,3
	.word	53575
	.byte	17,8,127,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_none',0,2,0,32
	.byte	'IfxCpu_Id',0,8,132,1,3
	.word	53597
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,8,161,1,3
	.word	9392
	.byte	10
	.byte	'_Ifx_SRC_SRCR_Bits',0,14,45,16,4,11
	.byte	'SRPN',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	641
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	641
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	641
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	641
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	641
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SRC_SRCR_Bits',0,14,62,3
	.word	53695
	.byte	12,14,70,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53695
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SRC_SRCR',0,14,75,3
	.word	54011
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,14,86,25,4,13
	.byte	'SR',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	54071
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,14,89,3
	.word	54103
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,14,92,25,12,13
	.byte	'TX',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	54011
	.byte	4,2,35,8,0,14
	.word	54129
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,14,97,3
	.word	54188
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,14,100,25,4,13
	.byte	'SBSRC',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	54216
	.byte	32
	.byte	'Ifx_SRC_BCUSPB',0,14,103,3
	.word	54253
	.byte	15,64
	.word	54011
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN',0,14,106,25,64,13
	.byte	'INT',0
	.word	54281
	.byte	64,2,35,0,0,14
	.word	54290
	.byte	32
	.byte	'Ifx_SRC_CAN',0,14,109,3
	.word	54322
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,14,112,25,16,13
	.byte	'SR0',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	54011
	.byte	4,2,35,12,0,14
	.word	54347
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,14,118,3
	.word	54419
	.byte	15,8
	.word	54011
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,14,121,25,8,13
	.byte	'SR',0
	.word	54445
	.byte	8,2,35,0,0,14
	.word	54454
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,14,124,3
	.word	54490
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,14,127,25,16,13
	.byte	'MI',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	54011
	.byte	4,2,35,12,0,14
	.word	54520
	.byte	32
	.byte	'Ifx_SRC_CIF',0,14,133,1,3
	.word	54593
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,14,136,1,25,4,13
	.byte	'SBSRC',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	54619
	.byte	32
	.byte	'Ifx_SRC_CPU',0,14,139,1,3
	.word	54654
	.byte	15,192,1
	.word	54011
	.byte	16,47,0,10
	.byte	'_Ifx_SRC_DMA',0,14,142,1,25,208,1,13
	.byte	'ERR',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	4618
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	54680
	.byte	192,1,2,35,16,0,14
	.word	54690
	.byte	32
	.byte	'Ifx_SRC_DMA',0,14,147,1,3
	.word	54757
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,14,150,1,25,8,13
	.byte	'SRM',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	54011
	.byte	4,2,35,4,0,14
	.word	54783
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,14,154,1,3
	.word	54831
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,14,157,1,25,4,13
	.byte	'SR',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	54859
	.byte	32
	.byte	'Ifx_SRC_EMEM',0,14,160,1,3
	.word	54892
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,14,163,1,25,80,13
	.byte	'INT',0
	.word	54445
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	54445
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	54445
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	54445
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	54011
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	54011
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	35951
	.byte	40,2,35,40,0,14
	.word	54919
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,14,172,1,3
	.word	55046
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,14,175,1,25,4,13
	.byte	'SR',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	55073
	.byte	32
	.byte	'Ifx_SRC_ETH',0,14,178,1,3
	.word	55105
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,14,181,1,25,4,13
	.byte	'SR',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	55131
	.byte	32
	.byte	'Ifx_SRC_FCE',0,14,184,1,3
	.word	55163
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,14,187,1,25,12,13
	.byte	'DONE',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	54011
	.byte	4,2,35,8,0,14
	.word	55189
	.byte	32
	.byte	'Ifx_SRC_FFT',0,14,192,1,3
	.word	55249
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,14,195,1,25,32,13
	.byte	'SR0',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	54011
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	35933
	.byte	16,2,35,16,0,14
	.word	55275
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,14,202,1,3
	.word	55369
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,14,205,1,25,48,13
	.byte	'CIRQ',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	54011
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	54011
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	54011
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3649
	.byte	24,2,35,24,0,14
	.word	55396
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,14,214,1,3
	.word	55513
	.byte	15,12
	.word	54011
	.byte	16,2,0,15,32
	.word	54011
	.byte	16,7,0,15,32
	.word	55550
	.byte	16,0,0,15,88
	.word	641
	.byte	16,87,0,15,108
	.word	54011
	.byte	16,26,0,15,96
	.word	641
	.byte	16,95,0,15,96
	.word	55550
	.byte	16,2,0,15,160,3
	.word	641
	.byte	16,159,3,0,15,64
	.word	55550
	.byte	16,1,0,15,192,3
	.word	641
	.byte	16,191,3,0,15,16
	.word	54011
	.byte	16,3,0,15,64
	.word	55635
	.byte	16,3,0,15,192,2
	.word	641
	.byte	16,191,2,0,15,52
	.word	641
	.byte	16,51,0,10
	.byte	'_Ifx_SRC_GTM',0,14,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	55541
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	2459
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	54011
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	54011
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	54445
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	4278
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	55559
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	55568
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	55577
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	55586
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	54011
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	4618
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	55595
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	55604
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	55595
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	55604
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	55615
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	55624
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	55644
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	55653
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	55541
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	55664
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	55541
	.byte	12,3,35,192,18,0,14
	.word	55673
	.byte	32
	.byte	'Ifx_SRC_GTM',0,14,243,1,3
	.word	56133
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,14,246,1,25,4,13
	.byte	'SR',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	56159
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,14,249,1,3
	.word	56192
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,14,252,1,25,16,13
	.byte	'COK',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	54011
	.byte	4,2,35,12,0,14
	.word	56219
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,14,130,2,3
	.word	56292
	.byte	15,56
	.word	641
	.byte	16,55,0,10
	.byte	'_Ifx_SRC_I2C',0,14,133,2,25,80,13
	.byte	'BREQ',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	54011
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	54011
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	54011
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	56319
	.byte	56,2,35,24,0,14
	.word	56328
	.byte	32
	.byte	'Ifx_SRC_I2C',0,14,142,2,3
	.word	56451
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,14,145,2,25,4,13
	.byte	'SR',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	56477
	.byte	32
	.byte	'Ifx_SRC_LMU',0,14,148,2,3
	.word	56509
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,14,151,2,25,20,13
	.byte	'SR0',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	54011
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	54011
	.byte	4,2,35,16,0,14
	.word	56535
	.byte	32
	.byte	'Ifx_SRC_MSC',0,14,158,2,3
	.word	56620
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,14,161,2,25,4,13
	.byte	'SR',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	56646
	.byte	32
	.byte	'Ifx_SRC_PMU',0,14,164,2,3
	.word	56678
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,14,167,2,25,32,13
	.byte	'SR',0
	.word	55550
	.byte	32,2,35,0,0,14
	.word	56704
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,14,170,2,3
	.word	56737
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,14,173,2,25,32,13
	.byte	'SR',0
	.word	55550
	.byte	32,2,35,0,0,14
	.word	56764
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,14,176,2,3
	.word	56798
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,14,179,2,25,24,13
	.byte	'TX',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	54011
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	54011
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	54011
	.byte	4,2,35,20,0,14
	.word	56826
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,14,187,2,3
	.word	56919
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,14,190,2,25,4,13
	.byte	'SR',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	56946
	.byte	32
	.byte	'Ifx_SRC_SCR',0,14,193,2,3
	.word	56978
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,14,196,2,25,20,13
	.byte	'DTS',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	55635
	.byte	16,2,35,4,0,14
	.word	57004
	.byte	32
	.byte	'Ifx_SRC_SCU',0,14,200,2,3
	.word	57050
	.byte	15,24
	.word	54011
	.byte	16,5,0,10
	.byte	'_Ifx_SRC_SENT',0,14,203,2,25,24,13
	.byte	'SR',0
	.word	57076
	.byte	24,2,35,0,0,14
	.word	57085
	.byte	32
	.byte	'Ifx_SRC_SENT',0,14,206,2,3
	.word	57118
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,14,209,2,25,12,13
	.byte	'SR',0
	.word	55541
	.byte	12,2,35,0,0,14
	.word	57145
	.byte	32
	.byte	'Ifx_SRC_SMU',0,14,212,2,3
	.word	57177
	.byte	10
	.byte	'_Ifx_SRC_STM',0,14,215,2,25,8,13
	.byte	'SR0',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	54011
	.byte	4,2,35,4,0,14
	.word	57203
	.byte	32
	.byte	'Ifx_SRC_STM',0,14,219,2,3
	.word	57249
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,14,222,2,25,16,13
	.byte	'SR0',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	54011
	.byte	4,2,35,12,0,14
	.word	57275
	.byte	32
	.byte	'Ifx_SRC_VADCCG',0,14,228,2,3
	.word	57350
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,14,231,2,25,16,13
	.byte	'SR0',0
	.word	54011
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	54011
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	54011
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	54011
	.byte	4,2,35,12,0,14
	.word	57379
	.byte	32
	.byte	'Ifx_SRC_VADCG',0,14,237,2,3
	.word	57453
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,14,240,2,25,4,13
	.byte	'SRC',0
	.word	54011
	.byte	4,2,35,0,0,14
	.word	57481
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,14,243,2,3
	.word	57515
	.byte	15,4
	.word	54071
	.byte	16,0,0,14
	.word	57542
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,14,128,3,25,4,13
	.byte	'AGBT',0
	.word	57551
	.byte	4,2,35,0,0,14
	.word	57556
	.byte	32
	.byte	'Ifx_SRC_GAGBT',0,14,131,3,3
	.word	57592
	.byte	15,48
	.word	54129
	.byte	16,3,0,14
	.word	57620
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,14,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	57629
	.byte	48,2,35,0,0,14
	.word	57634
	.byte	32
	.byte	'Ifx_SRC_GASCLIN',0,14,137,3,3
	.word	57674
	.byte	14
	.word	54216
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,14,140,3,25,4,13
	.byte	'SPB',0
	.word	57704
	.byte	4,2,35,0,0,14
	.word	57709
	.byte	32
	.byte	'Ifx_SRC_GBCU',0,14,143,3,3
	.word	57743
	.byte	15,64
	.word	54290
	.byte	16,0,0,14
	.word	57770
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,14,146,3,25,64,13
	.byte	'CAN',0
	.word	57779
	.byte	64,2,35,0,0,14
	.word	57784
	.byte	32
	.byte	'Ifx_SRC_GCAN',0,14,149,3,3
	.word	57818
	.byte	15,32
	.word	54347
	.byte	16,1,0,14
	.word	57845
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,14,152,3,25,32,13
	.byte	'CCU6',0
	.word	57854
	.byte	32,2,35,0,0,14
	.word	57859
	.byte	32
	.byte	'Ifx_SRC_GCCU6',0,14,155,3,3
	.word	57895
	.byte	14
	.word	54454
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,14,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	57923
	.byte	8,2,35,0,0,14
	.word	57928
	.byte	32
	.byte	'Ifx_SRC_GCERBERUS',0,14,161,3,3
	.word	57972
	.byte	15,16
	.word	54520
	.byte	16,0,0,14
	.word	58004
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,14,164,3,25,16,13
	.byte	'CIF',0
	.word	58013
	.byte	16,2,35,0,0,14
	.word	58018
	.byte	32
	.byte	'Ifx_SRC_GCIF',0,14,167,3,3
	.word	58052
	.byte	15,8
	.word	54619
	.byte	16,1,0,14
	.word	58079
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,14,170,3,25,8,13
	.byte	'CPU',0
	.word	58088
	.byte	8,2,35,0,0,14
	.word	58093
	.byte	32
	.byte	'Ifx_SRC_GCPU',0,14,173,3,3
	.word	58127
	.byte	15,208,1
	.word	54690
	.byte	16,0,0,14
	.word	58154
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,14,176,3,25,208,1,13
	.byte	'DMA',0
	.word	58164
	.byte	208,1,2,35,0,0,14
	.word	58169
	.byte	32
	.byte	'Ifx_SRC_GDMA',0,14,179,3,3
	.word	58205
	.byte	14
	.word	54783
	.byte	14
	.word	54783
	.byte	14
	.word	54783
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,14,182,3,25,32,13
	.byte	'DSADC0',0
	.word	58232
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	4278
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	58237
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	58242
	.byte	8,2,35,24,0,14
	.word	58247
	.byte	32
	.byte	'Ifx_SRC_GDSADC',0,14,188,3,3
	.word	58338
	.byte	15,4
	.word	54859
	.byte	16,0,0,14
	.word	58367
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,14,191,3,25,4,13
	.byte	'EMEM',0
	.word	58376
	.byte	4,2,35,0,0,14
	.word	58381
	.byte	32
	.byte	'Ifx_SRC_GEMEM',0,14,194,3,3
	.word	58417
	.byte	15,80
	.word	54919
	.byte	16,0,0,14
	.word	58445
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,14,197,3,25,80,13
	.byte	'ERAY',0
	.word	58454
	.byte	80,2,35,0,0,14
	.word	58459
	.byte	32
	.byte	'Ifx_SRC_GERAY',0,14,200,3,3
	.word	58495
	.byte	15,4
	.word	55073
	.byte	16,0,0,14
	.word	58523
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,14,203,3,25,4,13
	.byte	'ETH',0
	.word	58532
	.byte	4,2,35,0,0,14
	.word	58537
	.byte	32
	.byte	'Ifx_SRC_GETH',0,14,206,3,3
	.word	58571
	.byte	15,4
	.word	55131
	.byte	16,0,0,14
	.word	58598
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,14,209,3,25,4,13
	.byte	'FCE',0
	.word	58607
	.byte	4,2,35,0,0,14
	.word	58612
	.byte	32
	.byte	'Ifx_SRC_GFCE',0,14,212,3,3
	.word	58646
	.byte	15,12
	.word	55189
	.byte	16,0,0,14
	.word	58673
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,14,215,3,25,12,13
	.byte	'FFT',0
	.word	58682
	.byte	12,2,35,0,0,14
	.word	58687
	.byte	32
	.byte	'Ifx_SRC_GFFT',0,14,218,3,3
	.word	58721
	.byte	15,64
	.word	55275
	.byte	16,1,0,14
	.word	58748
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,14,221,3,25,64,13
	.byte	'GPSR',0
	.word	58757
	.byte	64,2,35,0,0,14
	.word	58762
	.byte	32
	.byte	'Ifx_SRC_GGPSR',0,14,224,3,3
	.word	58798
	.byte	15,48
	.word	55396
	.byte	16,0,0,14
	.word	58826
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,14,227,3,25,48,13
	.byte	'GPT12',0
	.word	58835
	.byte	48,2,35,0,0,14
	.word	58840
	.byte	32
	.byte	'Ifx_SRC_GGPT12',0,14,230,3,3
	.word	58878
	.byte	15,204,18
	.word	55673
	.byte	16,0,0,14
	.word	58907
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,14,233,3,25,204,18,13
	.byte	'GTM',0
	.word	58917
	.byte	204,18,2,35,0,0,14
	.word	58922
	.byte	32
	.byte	'Ifx_SRC_GGTM',0,14,236,3,3
	.word	58958
	.byte	15,4
	.word	56159
	.byte	16,0,0,14
	.word	58985
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,14,239,3,25,4,13
	.byte	'HSCT',0
	.word	58994
	.byte	4,2,35,0,0,14
	.word	58999
	.byte	32
	.byte	'Ifx_SRC_GHSCT',0,14,242,3,3
	.word	59035
	.byte	15,64
	.word	56219
	.byte	16,3,0,14
	.word	59063
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,14,245,3,25,68,13
	.byte	'HSSL',0
	.word	59072
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	54011
	.byte	4,2,35,64,0,14
	.word	59077
	.byte	32
	.byte	'Ifx_SRC_GHSSL',0,14,249,3,3
	.word	59126
	.byte	15,80
	.word	56328
	.byte	16,0,0,14
	.word	59154
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,14,252,3,25,80,13
	.byte	'I2C',0
	.word	59163
	.byte	80,2,35,0,0,14
	.word	59168
	.byte	32
	.byte	'Ifx_SRC_GI2C',0,14,255,3,3
	.word	59202
	.byte	15,4
	.word	56477
	.byte	16,0,0,14
	.word	59229
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,14,130,4,25,4,13
	.byte	'LMU',0
	.word	59238
	.byte	4,2,35,0,0,14
	.word	59243
	.byte	32
	.byte	'Ifx_SRC_GLMU',0,14,133,4,3
	.word	59277
	.byte	15,40
	.word	56535
	.byte	16,1,0,14
	.word	59304
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,14,136,4,25,40,13
	.byte	'MSC',0
	.word	59313
	.byte	40,2,35,0,0,14
	.word	59318
	.byte	32
	.byte	'Ifx_SRC_GMSC',0,14,139,4,3
	.word	59352
	.byte	15,8
	.word	56646
	.byte	16,1,0,14
	.word	59379
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,14,142,4,25,8,13
	.byte	'PMU',0
	.word	59388
	.byte	8,2,35,0,0,14
	.word	59393
	.byte	32
	.byte	'Ifx_SRC_GPMU',0,14,145,4,3
	.word	59427
	.byte	15,32
	.word	56704
	.byte	16,0,0,14
	.word	59454
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,14,148,4,25,32,13
	.byte	'PSI5',0
	.word	59463
	.byte	32,2,35,0,0,14
	.word	59468
	.byte	32
	.byte	'Ifx_SRC_GPSI5',0,14,151,4,3
	.word	59504
	.byte	15,32
	.word	56764
	.byte	16,0,0,14
	.word	59532
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,14,154,4,25,32,13
	.byte	'PSI5S',0
	.word	59541
	.byte	32,2,35,0,0,14
	.word	59546
	.byte	32
	.byte	'Ifx_SRC_GPSI5S',0,14,157,4,3
	.word	59584
	.byte	15,96
	.word	56826
	.byte	16,3,0,14
	.word	59613
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,14,160,4,25,96,13
	.byte	'QSPI',0
	.word	59622
	.byte	96,2,35,0,0,14
	.word	59627
	.byte	32
	.byte	'Ifx_SRC_GQSPI',0,14,163,4,3
	.word	59663
	.byte	15,4
	.word	56946
	.byte	16,0,0,14
	.word	59691
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,14,166,4,25,4,13
	.byte	'SCR',0
	.word	59700
	.byte	4,2,35,0,0,14
	.word	59705
	.byte	32
	.byte	'Ifx_SRC_GSCR',0,14,169,4,3
	.word	59739
	.byte	14
	.word	57004
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,14,172,4,25,20,13
	.byte	'SCU',0
	.word	59766
	.byte	20,2,35,0,0,14
	.word	59771
	.byte	32
	.byte	'Ifx_SRC_GSCU',0,14,175,4,3
	.word	59805
	.byte	15,24
	.word	57085
	.byte	16,0,0,14
	.word	59832
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,14,178,4,25,24,13
	.byte	'SENT',0
	.word	59841
	.byte	24,2,35,0,0,14
	.word	59846
	.byte	32
	.byte	'Ifx_SRC_GSENT',0,14,181,4,3
	.word	59882
	.byte	15,12
	.word	57145
	.byte	16,0,0,14
	.word	59910
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,14,184,4,25,12,13
	.byte	'SMU',0
	.word	59919
	.byte	12,2,35,0,0,14
	.word	59924
	.byte	32
	.byte	'Ifx_SRC_GSMU',0,14,187,4,3
	.word	59958
	.byte	15,16
	.word	57203
	.byte	16,1,0,14
	.word	59985
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,14,190,4,25,16,13
	.byte	'STM',0
	.word	59994
	.byte	16,2,35,0,0,14
	.word	59999
	.byte	32
	.byte	'Ifx_SRC_GSTM',0,14,193,4,3
	.word	60033
	.byte	15,64
	.word	57379
	.byte	16,3,0,14
	.word	60060
	.byte	15,224,1
	.word	641
	.byte	16,223,1,0,15,32
	.word	57275
	.byte	16,1,0,14
	.word	60085
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,14,196,4,25,192,2,13
	.byte	'G',0
	.word	60069
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	60074
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	60094
	.byte	32,3,35,160,2,0,14
	.word	60099
	.byte	32
	.byte	'Ifx_SRC_GVADC',0,14,201,4,3
	.word	60168
	.byte	14
	.word	57481
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,14,204,4,25,4,13
	.byte	'XBAR',0
	.word	60196
	.byte	4,2,35,0,0,14
	.word	60201
	.byte	32
	.byte	'Ifx_SRC_GXBAR',0,14,207,4,3
	.word	60237
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,15,45,16,4,11
	.byte	'EN0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_STM_ACCEN0_Bits',0,15,79,3
	.word	60265
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,15,82,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1_Bits',0,15,85,3
	.word	60822
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,15,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAP_Bits',0,15,91,3
	.word	60899
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,15,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV_Bits',0,15,97,3
	.word	60971
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,15,100,16,4,11
	.byte	'DISR',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_CLC_Bits',0,15,107,3
	.word	61047
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,15,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	641
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	641
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	641
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	641
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	641
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	641
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	641
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	641
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_STM_CMCON_Bits',0,15,120,3
	.word	61188
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,15,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CMP_Bits',0,15,126,3
	.word	61406
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,15,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	466
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_STM_ICR_Bits',0,15,139,1,3
	.word	61473
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,15,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_STM_ID_Bits',0,15,147,1,3
	.word	61676
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,15,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_ISCR_Bits',0,15,157,1,3
	.word	61783
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,15,160,1,16,4,11
	.byte	'RST',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	466
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST0_Bits',0,15,165,1,3
	.word	61934
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,15,168,1,16,4,11
	.byte	'RST',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	466
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST1_Bits',0,15,172,1,3
	.word	62045
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,15,175,1,16,4,11
	.byte	'CLR',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	466
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,15,179,1,3
	.word	62137
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,15,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	641
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	641
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_STM_OCS_Bits',0,15,189,1,3
	.word	62233
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,15,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0_Bits',0,15,195,1,3
	.word	62379
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,15,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV_Bits',0,15,201,1,3
	.word	62451
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,15,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM1_Bits',0,15,207,1,3
	.word	62527
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,15,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM2_Bits',0,15,213,1,3
	.word	62599
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,15,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM3_Bits',0,15,219,1,3
	.word	62671
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,15,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM4_Bits',0,15,225,1,3
	.word	62744
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,15,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM5_Bits',0,15,231,1,3
	.word	62817
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,15,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM6_Bits',0,15,237,1,3
	.word	62890
	.byte	12,15,245,1,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60265
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN0',0,15,250,1,3
	.word	62963
	.byte	12,15,253,1,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60822
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1',0,15,130,2,3
	.word	63027
	.byte	12,15,133,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60899
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAP',0,15,138,2,3
	.word	63091
	.byte	12,15,141,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60971
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV',0,15,146,2,3
	.word	63152
	.byte	12,15,149,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61047
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CLC',0,15,154,2,3
	.word	63215
	.byte	12,15,157,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61188
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMCON',0,15,162,2,3
	.word	63276
	.byte	12,15,165,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61406
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMP',0,15,170,2,3
	.word	63339
	.byte	12,15,173,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61473
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ICR',0,15,178,2,3
	.word	63400
	.byte	12,15,181,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61676
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ID',0,15,186,2,3
	.word	63461
	.byte	12,15,189,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61783
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ISCR',0,15,194,2,3
	.word	63521
	.byte	12,15,197,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61934
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST0',0,15,202,2,3
	.word	63583
	.byte	12,15,205,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62045
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST1',0,15,210,2,3
	.word	63646
	.byte	12,15,213,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62137
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR',0,15,218,2,3
	.word	63709
	.byte	12,15,221,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62233
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_OCS',0,15,226,2,3
	.word	63774
	.byte	12,15,229,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62379
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0',0,15,234,2,3
	.word	63835
	.byte	12,15,237,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62451
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV',0,15,242,2,3
	.word	63897
	.byte	12,15,245,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62527
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM1',0,15,250,2,3
	.word	63961
	.byte	12,15,253,2,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62599
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM2',0,15,130,3,3
	.word	64023
	.byte	12,15,133,3,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62671
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM3',0,15,138,3,3
	.word	64085
	.byte	12,15,141,3,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62744
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM4',0,15,146,3,3
	.word	64147
	.byte	12,15,149,3,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62817
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM5',0,15,154,3,3
	.word	64209
	.byte	12,15,157,3,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62890
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM6',0,15,162,3,3
	.word	64271
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,16,45,16,4,11
	.byte	'EN0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,16,79,3
	.word	64333
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,16,82,16,4,11
	.byte	'reserved_0',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,16,85,3
	.word	64894
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,16,88,16,4,11
	.byte	'SEL',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	641
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	466
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,16,95,3
	.word	64975
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,16,98,16,4,11
	.byte	'VLD0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	466
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,16,111,3
	.word	65128
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,16,114,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	466
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	641
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,16,121,3
	.word	65376
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,16,124,16,4,11
	.byte	'STATUS',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	466
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0_Bits',0,16,128,1,3
	.word	65522
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,16,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM1_Bits',0,16,136,1,3
	.word	65620
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,16,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM2_Bits',0,16,144,1,3
	.word	65736
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,16,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	466
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	658
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRD_Bits',0,16,153,1,3
	.word	65852
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,16,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	466
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	658
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRP_Bits',0,16,162,1,3
	.word	65992
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,16,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	466
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	658
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCW_Bits',0,16,171,1,3
	.word	66132
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,16,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	641
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	641
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	658
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	641
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	641
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	641
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	641
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FCON_Bits',0,16,193,1,3
	.word	66271
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,16,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	641
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	641
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	641
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FPRO_Bits',0,16,218,1,3
	.word	66633
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,16,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	658
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	641
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	641
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	641
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FSR_Bits',0,16,254,1,3
	.word	67074
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,16,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	641
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	641
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_ID_Bits',0,16,134,2,3
	.word	67680
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,16,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	658
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARD_Bits',0,16,147,2,3
	.word	67791
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,16,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	658
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARP_Bits',0,16,159,2,3
	.word	68005
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,16,162,2,16,4,11
	.byte	'L',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	641
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	641
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	641
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	658
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	641
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCOND_Bits',0,16,179,2,3
	.word	68192
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,16,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	641
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	466
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,16,188,2,3
	.word	68516
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,16,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	658
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,16,199,2,3
	.word	68659
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,16,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	658
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	641
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	641
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	641
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	658
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,16,219,2,3
	.word	68848
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,16,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	641
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	641
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,16,254,2,3
	.word	69211
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,16,129,3,16,4,11
	.byte	'S0L',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	641
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONP_Bits',0,16,160,3,3
	.word	69806
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,16,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	641
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	641
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	641
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	641
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	641
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	641
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	641
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	641
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	641
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	641
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	641
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	641
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	641
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	641
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	641
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	641
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	641
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	641
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	641
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	641
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	641
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,16,194,3,3
	.word	70330
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,16,197,3,16,4,11
	.byte	'TAG',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	466
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,16,201,3,3
	.word	70912
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,16,204,3,16,4,11
	.byte	'TAG',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	466
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,16,208,3,3
	.word	71014
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,16,211,3,16,4,11
	.byte	'TAG',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	466
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,16,215,3,3
	.word	71116
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,16,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	466
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD_Bits',0,16,222,3,3
	.word	71218
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,16,225,3,16,4,11
	.byte	'STRT',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	641
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	641
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	641
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	641
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	641
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	641
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	658
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_RRCT_Bits',0,16,236,3,3
	.word	71312
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,16,239,3,16,4,11
	.byte	'DATA',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0_Bits',0,16,242,3,3
	.word	71522
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,16,245,3,16,4,11
	.byte	'DATA',0,4
	.word	466
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1_Bits',0,16,248,3,3
	.word	71595
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,16,251,3,16,4,11
	.byte	'SEL',0,1
	.word	641
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	641
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	641
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	641
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	466
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,16,130,4,3
	.word	71668
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,16,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	641
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	466
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,16,137,4,3
	.word	71823
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,16,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	641
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	466
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	641
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	641
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	641
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,16,147,4,3
	.word	71928
	.byte	12,16,155,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64333
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN0',0,16,160,4,3
	.word	72076
	.byte	12,16,163,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64894
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1',0,16,168,4,3
	.word	72142
	.byte	12,16,171,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64975
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG',0,16,176,4,3
	.word	72208
	.byte	12,16,179,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65128
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT',0,16,184,4,3
	.word	72276
	.byte	12,16,187,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65376
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_TOP',0,16,192,4,3
	.word	72345
	.byte	12,16,195,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65522
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0',0,16,200,4,3
	.word	72413
	.byte	12,16,203,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65620
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM1',0,16,208,4,3
	.word	72478
	.byte	12,16,211,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65736
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM2',0,16,216,4,3
	.word	72543
	.byte	12,16,219,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65852
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRD',0,16,224,4,3
	.word	72608
	.byte	12,16,227,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65992
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRP',0,16,232,4,3
	.word	72673
	.byte	12,16,235,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66132
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCW',0,16,240,4,3
	.word	72738
	.byte	12,16,243,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66271
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FCON',0,16,248,4,3
	.word	72802
	.byte	12,16,251,4,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66633
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FPRO',0,16,128,5,3
	.word	72866
	.byte	12,16,131,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67074
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FSR',0,16,136,5,3
	.word	72930
	.byte	12,16,139,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67680
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ID',0,16,144,5,3
	.word	72993
	.byte	12,16,147,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67791
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARD',0,16,152,5,3
	.word	73055
	.byte	12,16,155,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68005
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARP',0,16,160,5,3
	.word	73119
	.byte	12,16,163,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68192
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCOND',0,16,168,5,3
	.word	73183
	.byte	12,16,171,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68516
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG',0,16,176,5,3
	.word	73250
	.byte	12,16,179,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68659
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSM',0,16,184,5,3
	.word	73319
	.byte	12,16,187,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68848
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,16,192,5,3
	.word	73388
	.byte	12,16,195,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69211
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONOTP',0,16,200,5,3
	.word	73461
	.byte	12,16,203,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69806
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONP',0,16,208,5,3
	.word	73530
	.byte	12,16,211,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70330
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONWOP',0,16,216,5,3
	.word	73597
	.byte	12,16,219,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70912
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0',0,16,224,5,3
	.word	73666
	.byte	12,16,227,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71014
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1',0,16,232,5,3
	.word	73734
	.byte	12,16,235,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71116
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2',0,16,240,5,3
	.word	73802
	.byte	12,16,243,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71218
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD',0,16,248,5,3
	.word	73870
	.byte	12,16,251,5,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71312
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRCT',0,16,128,6,3
	.word	73934
	.byte	12,16,131,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71522
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0',0,16,136,6,3
	.word	73998
	.byte	12,16,139,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71595
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1',0,16,144,6,3
	.word	74062
	.byte	12,16,147,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71668
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG',0,16,152,6,3
	.word	74126
	.byte	12,16,155,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71823
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT',0,16,160,6,3
	.word	74194
	.byte	12,16,163,6,9,4,13
	.byte	'U',0
	.word	466
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	482
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71928
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_TOP',0,16,168,6,3
	.word	74263
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,16,179,6,25,12,13
	.byte	'CFG',0
	.word	72208
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	72276
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	72345
	.byte	4,2,35,8,0,14
	.word	74331
	.byte	32
	.byte	'Ifx_FLASH_CBAB',0,16,184,6,3
	.word	74394
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,16,187,6,25,12,13
	.byte	'CFG0',0
	.word	73666
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	73734
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	73802
	.byte	4,2,35,8,0,14
	.word	74423
	.byte	32
	.byte	'Ifx_FLASH_RDB',0,16,192,6,3
	.word	74487
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,16,195,6,25,12,13
	.byte	'CFG',0
	.word	74126
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	74194
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	74263
	.byte	4,2,35,8,0,14
	.word	74515
	.byte	32
	.byte	'Ifx_FLASH_UBAB',0,16,200,6,3
	.word	74578
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,6,79,3
	.word	8031
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,6,85,3
	.word	7944
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,6,107,3
	.word	4287
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,6,115,3
	.word	2340
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,6,137,1,3
	.word	3335
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,6,150,1,3
	.word	2468
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,6,163,1,3
	.word	3115
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,6,176,1,3
	.word	2683
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,6,189,1,3
	.word	2898
	.byte	32
	.byte	'Ifx_P_LPCR0_Bits',0,6,197,1,3
	.word	7303
	.byte	32
	.byte	'Ifx_P_LPCR1_Bits',0,6,205,1,3
	.word	7427
	.byte	32
	.byte	'Ifx_P_LPCR1_P21_Bits',0,6,215,1,3
	.word	7511
	.byte	32
	.byte	'Ifx_P_LPCR2_Bits',0,6,229,1,3
	.word	7691
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,6,240,1,3
	.word	5942
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,6,250,1,3
	.word	6466
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,6,133,2,3
	.word	6116
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,6,144,2,3
	.word	6290
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,6,166,2,3
	.word	6955
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,6,203,2,3
	.word	1769
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,6,213,2,3
	.word	5279
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,6,224,2,3
	.word	5767
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,6,235,2,3
	.word	5426
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,6,246,2,3
	.word	5595
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,6,140,3,3
	.word	6622
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,6,162,3,3
	.word	1453
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,6,180,3,3
	.word	4993
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,6,202,3,3
	.word	4627
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,6,223,3,3
	.word	3658
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,6,244,3,3
	.word	3962
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,6,129,4,3
	.word	8558
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,6,137,4,3
	.word	7991
	.byte	32
	.byte	'Ifx_P_ESR',0,6,145,4,3
	.word	4578
	.byte	32
	.byte	'Ifx_P_ID',0,6,153,4,3
	.word	2419
	.byte	32
	.byte	'Ifx_P_IN',0,6,161,4,3
	.word	3609
	.byte	32
	.byte	'Ifx_P_IOCR0',0,6,169,4,3
	.word	2643
	.byte	32
	.byte	'Ifx_P_IOCR12',0,6,177,4,3
	.word	3295
	.byte	32
	.byte	'Ifx_P_IOCR4',0,6,185,4,3
	.word	2858
	.byte	32
	.byte	'Ifx_P_IOCR8',0,6,193,4,3
	.word	3075
	.byte	32
	.byte	'Ifx_P_LPCR0',0,6,201,4,3
	.word	7387
	.byte	32
	.byte	'Ifx_P_LPCR1',0,6,210,4,3
	.word	7636
	.byte	32
	.byte	'Ifx_P_LPCR2',0,6,218,4,3
	.word	7895
	.byte	32
	.byte	'Ifx_P_OMCR',0,6,226,4,3
	.word	7263
	.byte	32
	.byte	'Ifx_P_OMCR0',0,6,234,4,3
	.word	6076
	.byte	32
	.byte	'Ifx_P_OMCR12',0,6,242,4,3
	.word	6582
	.byte	32
	.byte	'Ifx_P_OMCR4',0,6,250,4,3
	.word	6250
	.byte	32
	.byte	'Ifx_P_OMCR8',0,6,130,5,3
	.word	6426
	.byte	32
	.byte	'Ifx_P_OMR',0,6,138,5,3
	.word	2300
	.byte	32
	.byte	'Ifx_P_OMSR',0,6,146,5,3
	.word	6915
	.byte	32
	.byte	'Ifx_P_OMSR0',0,6,154,5,3
	.word	5386
	.byte	32
	.byte	'Ifx_P_OMSR12',0,6,162,5,3
	.word	5902
	.byte	32
	.byte	'Ifx_P_OMSR4',0,6,170,5,3
	.word	5555
	.byte	32
	.byte	'Ifx_P_OMSR8',0,6,178,5,3
	.word	5727
	.byte	32
	.byte	'Ifx_P_OUT',0,6,186,5,3
	.word	1729
	.byte	32
	.byte	'Ifx_P_PCSR',0,6,194,5,3
	.word	5239
	.byte	32
	.byte	'Ifx_P_PDISC',0,6,202,5,3
	.word	4953
	.byte	32
	.byte	'Ifx_P_PDR0',0,6,210,5,3
	.word	3922
	.byte	32
	.byte	'Ifx_P_PDR1',0,6,218,5,3
	.word	4238
	.byte	14
	.word	8598
	.byte	32
	.byte	'Ifx_P',0,6,139,6,3
	.word	75925
	.byte	17,5,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,32
	.byte	'IfxPort_InputMode',0,5,89,3
	.word	75945
	.byte	17,5,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,32
	.byte	'IfxPort_OutputIdx',0,5,130,1,3
	.word	76096
	.byte	17,5,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,32
	.byte	'IfxPort_OutputMode',0,5,138,1,3
	.word	76340
	.byte	17,5,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,32
	.byte	'IfxPort_PadDriver',0,5,158,1,3
	.word	76438
	.byte	32
	.byte	'IfxPort_State',0,5,178,1,3
	.word	9211
	.byte	34,5,190,1,9,8,13
	.byte	'port',0
	.word	9206
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	641
	.byte	1,2,35,4,0,32
	.byte	'IfxPort_Pin',0,5,194,1,3
	.word	76903
	.byte	32
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,17,148,1,16
	.word	205
	.byte	34,17,212,5,9,8,13
	.byte	'value',0
	.word	9505
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9505
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,17,216,5,3
	.word	77003
	.byte	34,17,221,5,9,8,13
	.byte	'pDivider',0
	.word	641
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	641
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	641
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	262
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,17,227,5,3
	.word	77074
	.byte	34,17,231,5,9,12,13
	.byte	'k2Step',0
	.word	641
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	262
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	76963
	.byte	4,2,35,8,0,32
	.byte	'IfxScuCcu_PllStepsConfig',0,17,236,5,3
	.word	77191
	.byte	3
	.word	202
	.byte	34,17,244,5,9,48,13
	.byte	'ccucon0',0
	.word	77003
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	77003
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	77003
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	77003
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	77003
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	77003
	.byte	8,2,35,40,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,17,252,5,3
	.word	77293
	.byte	34,17,128,6,9,8,13
	.byte	'value',0
	.word	9505
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9505
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,17,132,6,3
	.word	77445
	.byte	3
	.word	77191
	.byte	34,17,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	641
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	77521
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	77074
	.byte	8,2,35,8,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,17,142,6,3
	.word	77526
	.byte	17,7,144,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,7,148,1,3
	.word	77643
	.byte	34,7,160,1,9,6,13
	.byte	'counter',0
	.word	9505
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	641
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,7,164,1,3
	.word	77732
	.byte	34,7,172,1,9,32,13
	.byte	'instruction',0
	.word	77732
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	77732
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	77732
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	77732
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	77732
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,7,179,1,3
	.word	77798
	.byte	35
	.word	466
	.byte	36,0,37
	.byte	'__ISTACK1',0,10,72,1
	.word	77916
	.byte	1,1,37
	.byte	'__INTTAB_CPU1',0,10,72,1
	.word	77916
	.byte	1,1,37
	.byte	'__TRAPTAB_CPU1',0,10,72,1
	.word	77916
	.byte	1,1,37
	.byte	'__CSA1',0,10,72,1
	.word	77916
	.byte	1,1,37
	.byte	'__CSA1_END',0,10,72,1
	.word	77916
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L39:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,29,1,49,19,0,0,29,11,0,49,19,0,0,30
	.byte	46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,31,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12
	.byte	0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,0,54,15,0,0,34,19,1,58,15,59,15,57,15,11,15,0,0,35,1
	.byte	1,73,19,0,0,36,33,0,0,0,37,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L40:
	.word	.L157-.L156
.L156:
	.half	3
	.word	.L159-.L158
.L158:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'C:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'C:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'C:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'C:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'C:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart\\IfxCpu_CStart1.c',0,0,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0,0
.L159:
.L157:
	.sdecl	'.debug_info',debug,cluster('_Core1_start')
	.sect	'.debug_info'
.L41:
	.word	1260
	.half	3
	.word	.L42
	.byte	4,1
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart\\IfxCpu_CStart1.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Debug\\',0,12,1
	.word	.L44,.L43
	.byte	2
	.word	.L37
	.byte	3
	.byte	'_Core1_start',0,1,92,6,1,1,1
	.word	.L36,.L46,.L35
	.byte	4
	.word	.L36,.L46
	.byte	5
	.byte	'pcxi',0,1,94,12
	.word	.L47,.L48
	.byte	5
	.byte	'wdtPassword',0,1,95,12
	.word	.L49,.L50
	.byte	6
	.word	.L51,.L52,.L2
	.byte	7
	.word	.L53,.L54
	.byte	8
	.word	.L55,.L52,.L2
	.byte	5
	.byte	'password',0,2,229,3,12
	.word	.L49,.L56
	.byte	0,0,6
	.word	.L57,.L58,.L59
	.byte	7
	.word	.L60,.L61
	.byte	8
	.word	.L62,.L58,.L59
	.byte	8
	.word	.L63,.L64,.L3
	.byte	5
	.byte	'pcon1',0,3,208,7,23
	.word	.L65,.L66
	.byte	0,8
	.word	.L67,.L3,.L59
	.byte	5
	.byte	'coreIndex',0,3,214,7,12
	.word	.L47,.L68
	.byte	5
	.byte	'wdtPassword',0,3,215,7,12
	.word	.L49,.L69
	.byte	6
	.word	.L70,.L3,.L4
	.byte	8
	.word	.L71,.L3,.L4
	.byte	5
	.byte	'reg',0,3,143,6,21
	.word	.L72,.L73
	.byte	0,0,6
	.word	.L51,.L74,.L5
	.byte	7
	.word	.L53,.L54
	.byte	8
	.word	.L55,.L74,.L5
	.byte	5
	.byte	'password',0,2,229,3,12
	.word	.L49,.L75
	.byte	0,0,6
	.word	.L76,.L77,.L78
	.byte	7
	.word	.L79,.L80
	.byte	7
	.word	.L81,.L82
	.byte	9
	.word	.L83,.L77,.L78
	.byte	0,8
	.word	.L84,.L78,.L85
	.byte	5
	.byte	'pcon0',0,3,219,7,23
	.word	.L86,.L87
	.byte	6
	.word	.L88,.L89,.L85
	.byte	7
	.word	.L90,.L91
	.byte	7
	.word	.L92,.L93
	.byte	9
	.word	.L94,.L89,.L85
	.byte	0,0,0,0,0,6
	.word	.L95,.L96,.L97
	.byte	7
	.word	.L98,.L99
	.byte	8
	.word	.L100,.L96,.L97
	.byte	5
	.byte	'coreIndex',0,3,179,7,12
	.word	.L47,.L101
	.byte	5
	.byte	'wdtPassword',0,3,180,7,12
	.word	.L49,.L102
	.byte	6
	.word	.L70,.L96,.L14
	.byte	8
	.word	.L71,.L96,.L14
	.byte	5
	.byte	'reg',0,3,143,6,21
	.word	.L72,.L103
	.byte	0,0,6
	.word	.L51,.L104,.L15
	.byte	7
	.word	.L53,.L54
	.byte	8
	.word	.L55,.L104,.L15
	.byte	5
	.byte	'password',0,2,229,3,12
	.word	.L49,.L105
	.byte	0,0,6
	.word	.L76,.L106,.L107
	.byte	7
	.word	.L79,.L80
	.byte	7
	.word	.L81,.L82
	.byte	9
	.word	.L83,.L106,.L107
	.byte	0,8
	.word	.L108,.L107,.L109
	.byte	5
	.byte	'dcon0',0,3,184,7,23
	.word	.L110,.L111
	.byte	6
	.word	.L88,.L112,.L109
	.byte	7
	.word	.L90,.L91
	.byte	7
	.word	.L92,.L93
	.byte	9
	.word	.L94,.L112,.L109
	.byte	0,0,0,0,6
	.word	.L76,.L113,.L114
	.byte	7
	.word	.L79,.L80
	.byte	7
	.word	.L81,.L82
	.byte	9
	.word	.L83,.L113,.L114
	.byte	0,6
	.word	.L88,.L115,.L116
	.byte	7
	.word	.L90,.L91
	.byte	7
	.word	.L92,.L93
	.byte	9
	.word	.L94,.L115,.L116
	.byte	0,6
	.word	.L117,.L118,.L119
	.byte	7
	.word	.L120,.L121
	.byte	7
	.word	.L122,.L123
	.byte	8
	.word	.L124,.L118,.L119
	.byte	5
	.byte	'k',0,3,221,6,13
	.word	.L47,.L125
	.byte	5
	.byte	'nxt_cxi_val',0,3,222,6,13
	.word	.L47,.L126
	.byte	5
	.byte	'prvCsa',0,3,223,6,13
	.word	.L127,.L128
	.byte	5
	.byte	'nxtCsa',0,3,224,6,13
	.word	.L127,.L129
	.byte	5
	.byte	'numOfCsa',0,3,225,6,13
	.word	.L47,.L130
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_Core1_start')
	.sect	'.debug_abbrev'
.L42:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('_Core1_start')
	.sect	'.debug_line'
.L43:
	.word	.L161-.L160
.L160:
	.half	3
	.word	.L163-.L162
.L162:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'C:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'C:\\Users\\zxy\\Desktop\\new_car_v1.8\\new_car_v1.4\\image_processing1.0\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\Libraries\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart\\IfxCpu_CStart1.c',0,0,0,0
	.byte	'IfxScuWdt.h',0,1,0,0
	.byte	'IfxCpu.h',0,2,0,0,0
.L163:
	.byte	5,83,7,0,5,2
	.word	.L36
	.byte	3,222,0,1,4,2,5,33,9
	.half	.L52-.L36
	.byte	3,139,3,1,5,14,9
	.half	.L131-.L52
	.byte	3,1,1,5,5,9
	.half	.L132-.L131
	.byte	3,2,1,4,1,9
	.half	.L2-.L132
	.byte	3,247,124,1,5,12,9
	.half	.L164-.L2
	.byte	3,1,1,5,21,9
	.half	.L165-.L164
	.byte	3,3,1,5,11,9
	.half	.L166-.L165
	.byte	1,5,19,9
	.half	.L167-.L166
	.byte	3,3,1,5,10,9
	.half	.L134-.L167
	.byte	3,1,1,5,11,9
	.half	.L168-.L134
	.byte	3,1,1,5,28,9
	.half	.L169-.L168
	.byte	3,3,1,4,3,5,5,9
	.half	.L58-.L169
	.byte	3,222,6,1,5,23,7,9
	.half	.L64-.L58
	.byte	3,3,1,9
	.half	.L135-.L64
	.byte	3,1,1,5,15,9
	.half	.L170-.L135
	.byte	3,1,1,5,19,9
	.half	.L3-.L170
	.byte	3,189,126,1,5,37,9
	.half	.L136-.L3
	.byte	3,1,1,5,5,9
	.half	.L171-.L136
	.byte	1,5,83,9
	.half	.L4-.L171
	.byte	3,198,1,1,4,2,5,33,9
	.half	.L74-.L4
	.byte	3,147,124,1,5,14,9
	.half	.L138-.L74
	.byte	3,1,1,5,5,9
	.half	.L139-.L138
	.byte	3,2,1,4,3,5,59,9
	.half	.L5-.L139
	.byte	3,237,3,1,4,2,5,25,9
	.half	.L77-.L5
	.byte	3,221,123,1,5,5,9
	.half	.L137-.L77
	.byte	1,5,38,7,9
	.half	.L172-.L137
	.byte	3,5,1,5,45,9
	.half	.L173-.L172
	.byte	3,1,1,5,50,9
	.half	.L174-.L173
	.byte	1,5,69,9
	.half	.L175-.L174
	.byte	3,127,1,5,26,9
	.half	.L176-.L175
	.byte	3,126,1,5,34,9
	.half	.L6-.L176
	.byte	3,9,1,5,41,9
	.half	.L177-.L6
	.byte	3,1,1,5,46,9
	.half	.L178-.L177
	.byte	1,5,65,9
	.half	.L179-.L178
	.byte	3,127,1,5,22,9
	.half	.L180-.L179
	.byte	3,126,1,5,41,9
	.half	.L181-.L180
	.byte	3,6,1,5,28,9
	.half	.L7-.L181
	.byte	1,5,41,9
	.half	.L182-.L7
	.byte	1,4,3,5,23,7,9
	.half	.L78-.L182
	.byte	3,149,4,1,5,25,9
	.half	.L141-.L78
	.byte	3,1,1,5,32,7,9
	.half	.L183-.L141
	.byte	1,5,36,9
	.half	.L184-.L183
	.byte	1,5,32,9
	.half	.L9-.L184
	.byte	1,5,23,9
	.half	.L10-.L9
	.byte	1,5,15,9
	.half	.L185-.L10
	.byte	3,1,1,5,57,9
	.half	.L186-.L185
	.byte	3,1,1,4,2,5,25,9
	.half	.L89-.L186
	.byte	3,175,124,1,5,5,9
	.half	.L187-.L89
	.byte	1,5,38,7,9
	.half	.L188-.L187
	.byte	3,5,1,5,45,9
	.half	.L189-.L188
	.byte	3,1,1,5,50,9
	.half	.L190-.L189
	.byte	1,5,69,9
	.half	.L191-.L190
	.byte	3,127,1,5,26,9
	.half	.L192-.L191
	.byte	3,126,1,5,34,9
	.half	.L11-.L192
	.byte	3,9,1,5,41,9
	.half	.L193-.L11
	.byte	3,1,1,5,46,9
	.half	.L194-.L193
	.byte	1,5,65,9
	.half	.L195-.L194
	.byte	3,127,1,5,22,9
	.half	.L196-.L195
	.byte	3,126,1,5,41,9
	.half	.L197-.L196
	.byte	3,6,1,5,28,9
	.half	.L12-.L197
	.byte	1,5,41,9
	.half	.L198-.L12
	.byte	1,4,3,5,12,7,9
	.half	.L85-.L198
	.byte	3,196,3,1,4,1,5,25,9
	.half	.L59-.L85
	.byte	3,145,121,1,4,3,5,19,9
	.half	.L96-.L59
	.byte	3,157,5,1,5,37,9
	.half	.L143-.L96
	.byte	3,1,1,5,5,9
	.half	.L199-.L143
	.byte	1,5,83,9
	.half	.L14-.L199
	.byte	3,163,1,1,4,2,5,33,9
	.half	.L104-.L14
	.byte	3,182,124,1,5,14,9
	.half	.L145-.L104
	.byte	3,1,1,5,5,9
	.half	.L146-.L145
	.byte	3,2,1,4,3,5,59,9
	.half	.L15-.L146
	.byte	3,202,3,1,4,2,5,25,9
	.half	.L106-.L15
	.byte	3,128,124,1,5,5,9
	.half	.L144-.L106
	.byte	1,5,38,7,9
	.half	.L200-.L144
	.byte	3,5,1,5,45,9
	.half	.L201-.L200
	.byte	3,1,1,5,50,9
	.half	.L202-.L201
	.byte	1,5,69,9
	.half	.L203-.L202
	.byte	3,127,1,5,26,9
	.half	.L204-.L203
	.byte	3,126,1,5,34,9
	.half	.L16-.L204
	.byte	3,9,1,5,41,9
	.half	.L205-.L16
	.byte	3,1,1,5,46,9
	.half	.L206-.L205
	.byte	1,5,65,9
	.half	.L207-.L206
	.byte	3,127,1,5,22,9
	.half	.L208-.L207
	.byte	3,126,1,5,41,9
	.half	.L209-.L208
	.byte	3,6,1,5,28,9
	.half	.L17-.L209
	.byte	1,5,41,9
	.half	.L210-.L17
	.byte	1,4,3,5,23,7,9
	.half	.L107-.L210
	.byte	3,242,3,1,5,25,9
	.half	.L148-.L107
	.byte	3,1,1,5,32,7,9
	.half	.L211-.L148
	.byte	1,5,36,9
	.half	.L212-.L211
	.byte	1,5,32,9
	.half	.L19-.L212
	.byte	1,5,23,9
	.half	.L20-.L19
	.byte	1,5,15,9
	.half	.L213-.L20
	.byte	3,1,1,5,57,9
	.half	.L214-.L213
	.byte	3,1,1,4,2,5,25,9
	.half	.L112-.L214
	.byte	3,210,124,1,5,5,9
	.half	.L215-.L112
	.byte	1,5,38,7,9
	.half	.L216-.L215
	.byte	3,5,1,5,45,9
	.half	.L217-.L216
	.byte	3,1,1,5,50,9
	.half	.L218-.L217
	.byte	1,5,69,9
	.half	.L219-.L218
	.byte	3,127,1,5,26,9
	.half	.L220-.L219
	.byte	3,126,1,5,34,9
	.half	.L21-.L220
	.byte	3,9,1,5,41,9
	.half	.L221-.L21
	.byte	3,1,1,5,46,9
	.half	.L222-.L221
	.byte	1,5,65,9
	.half	.L223-.L222
	.byte	3,127,1,5,22,9
	.half	.L224-.L223
	.byte	3,126,1,5,41,9
	.half	.L225-.L224
	.byte	3,6,1,5,28,9
	.half	.L22-.L225
	.byte	1,5,41,9
	.half	.L226-.L22
	.byte	1,4,3,5,12,7,9
	.half	.L109-.L226
	.byte	3,161,3,1,4,1,5,55,9
	.half	.L97-.L109
	.byte	3,183,121,1,4,2,5,25,9
	.half	.L113-.L97
	.byte	3,193,2,1,5,5,9
	.half	.L227-.L113
	.byte	1,5,38,7,9
	.half	.L228-.L227
	.byte	3,5,1,5,45,9
	.half	.L229-.L228
	.byte	3,1,1,5,50,9
	.half	.L230-.L229
	.byte	1,5,69,9
	.half	.L231-.L230
	.byte	3,127,1,5,26,9
	.half	.L232-.L231
	.byte	3,126,1,5,34,9
	.half	.L24-.L232
	.byte	3,9,1,5,41,9
	.half	.L233-.L24
	.byte	3,1,1,5,46,9
	.half	.L234-.L233
	.byte	1,5,65,9
	.half	.L235-.L234
	.byte	3,127,1,5,22,9
	.half	.L236-.L235
	.byte	3,126,1,5,41,9
	.half	.L237-.L236
	.byte	3,6,1,5,28,9
	.half	.L25-.L237
	.byte	1,5,41,9
	.half	.L238-.L25
	.byte	1,4,1,5,29,7,9
	.half	.L114-.L238
	.byte	3,178,125,1,5,11,9
	.half	.L239-.L114
	.byte	1,5,29,9
	.half	.L240-.L239
	.byte	3,3,1,5,11,9
	.half	.L241-.L240
	.byte	1,5,29,9
	.half	.L242-.L241
	.byte	3,3,1,5,11,9
	.half	.L243-.L242
	.byte	1,5,53,9
	.half	.L244-.L243
	.byte	3,2,1,4,2,5,25,9
	.half	.L115-.L244
	.byte	3,141,3,1,5,5,9
	.half	.L245-.L115
	.byte	1,5,38,7,9
	.half	.L246-.L245
	.byte	3,5,1,5,45,9
	.half	.L247-.L246
	.byte	3,1,1,5,50,9
	.half	.L248-.L247
	.byte	1,5,69,9
	.half	.L249-.L248
	.byte	3,127,1,5,26,9
	.half	.L250-.L249
	.byte	3,126,1,5,34,9
	.half	.L27-.L250
	.byte	3,9,1,5,41,9
	.half	.L251-.L27
	.byte	3,1,1,5,46,9
	.half	.L252-.L251
	.byte	1,5,65,9
	.half	.L253-.L252
	.byte	3,127,1,5,22,9
	.half	.L254-.L253
	.byte	3,126,1,5,41,9
	.half	.L255-.L254
	.byte	3,6,1,5,28,9
	.half	.L28-.L255
	.byte	1,5,41,9
	.half	.L256-.L28
	.byte	1,4,1,5,5,7,9
	.half	.L116-.L256
	.byte	3,230,124,1,9
	.half	.L257-.L116
	.byte	3,1,1,9
	.half	.L258-.L257
	.byte	3,3,1,9
	.half	.L259-.L258
	.byte	3,1,1,5,30,9
	.half	.L260-.L259
	.byte	3,2,1,5,50,9
	.half	.L261-.L260
	.byte	1,4,3,5,25,9
	.half	.L118-.L261
	.byte	3,212,5,1,5,37,9
	.half	.L152-.L118
	.byte	3,2,1,5,54,9
	.half	.L262-.L152
	.byte	1,5,44,9
	.half	.L263-.L262
	.byte	1,5,64,9
	.half	.L264-.L263
	.byte	1,5,12,9
	.half	.L153-.L264
	.byte	3,2,1,5,29,9
	.half	.L154-.L153
	.byte	1,5,32,9
	.half	.L31-.L154
	.byte	3,2,1,5,39,9
	.half	.L265-.L31
	.byte	1,5,55,9
	.half	.L266-.L265
	.byte	1,5,72,9
	.half	.L267-.L266
	.byte	1,5,90,9
	.half	.L268-.L267
	.byte	1,5,79,9
	.half	.L269-.L268
	.byte	1,5,97,9
	.half	.L270-.L269
	.byte	1,5,61,9
	.half	.L155-.L270
	.byte	1,5,9,9
	.half	.L271-.L155
	.byte	3,2,1,5,19,7,9
	.half	.L272-.L271
	.byte	3,2,1,5,41,9
	.half	.L273-.L272
	.byte	1,5,21,9
	.half	.L32-.L273
	.byte	3,4,1,5,28,9
	.half	.L33-.L32
	.byte	3,3,1,5,9,9
	.half	.L274-.L33
	.byte	1,5,19,7,9
	.half	.L275-.L274
	.byte	3,2,1,5,17,9
	.half	.L34-.L275
	.byte	3,3,1,5,16,9
	.half	.L276-.L34
	.byte	3,1,1,5,32,9
	.half	.L277-.L276
	.byte	3,109,1,5,29,9
	.half	.L30-.L277
	.byte	1,5,15,7,9
	.half	.L278-.L30
	.byte	3,22,1,5,13,9
	.half	.L279-.L278
	.byte	1,4,1,5,5,9
	.half	.L119-.L279
	.byte	3,149,122,1,5,1,9
	.half	.L280-.L119
	.byte	3,1,1,7,9
	.half	.L45-.L280
	.byte	0,1,1
.L161:
	.sdecl	'.debug_ranges',debug,cluster('_Core1_start')
	.sect	'.debug_ranges'
.L44:
	.word	-1,.L36,0,.L45-.L36,0,0
	.sdecl	'.debug_loc',debug,cluster('_Core1_start')
	.sect	'.debug_loc'
.L35:
	.word	-1,.L36,0,.L46-.L36
	.half	2
	.byte	138,0
	.word	0,0
.L101:
	.word	0,0
.L68:
	.word	0,0
.L121:
	.word	0,0
.L123:
	.word	0,0
.L111:
	.word	-1,.L36,.L148-.L36,.L149-.L36
	.half	1
	.byte	95
	.word	0,0
.L99:
	.word	0,0
.L61:
	.word	0,0
.L125:
	.word	-1,.L36,.L154-.L36,.L46-.L36
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L130:
	.word	-1,.L36,.L153-.L36,.L46-.L36
	.half	1
	.byte	85
	.word	0,0
.L129:
	.word	-1,.L36,.L150-.L36,.L151-.L36
	.half	1
	.byte	111
	.word	0,0
.L126:
	.word	-1,.L36,.L155-.L36,.L30-.L36
	.half	1
	.byte	81
	.word	0,0
.L82:
	.word	0,0
.L56:
	.word	-1,.L36,.L131-.L36,.L132-.L36
	.half	1
	.byte	95
	.word	.L132-.L36,.L133-.L36
	.half	1
	.byte	81
	.word	0,0
.L75:
	.word	-1,.L36,.L138-.L36,.L139-.L36
	.half	5
	.byte	144,32,157,32,0
	.word	.L139-.L36,.L140-.L36
	.half	1
	.byte	84
	.word	0,0
.L105:
	.word	-1,.L36,.L145-.L36,.L146-.L36
	.half	5
	.byte	144,32,157,32,0
	.word	.L146-.L36,.L147-.L36
	.half	1
	.byte	84
	.word	0,0
.L93:
	.word	0,0
.L87:
	.word	-1,.L36,.L141-.L36,.L142-.L36
	.half	1
	.byte	95
	.word	0,0
.L66:
	.word	-1,.L36,.L135-.L36,.L3-.L36
	.half	1
	.byte	95
	.word	0,0
.L48:
	.word	-1,.L36,.L134-.L36,.L135-.L36
	.half	1
	.byte	95
	.word	0,0
.L128:
	.word	-1,.L36,.L152-.L36,.L46-.L36
	.half	1
	.byte	100
	.word	0,0
.L73:
	.word	-1,.L36,.L136-.L36,.L137-.L36
	.half	1
	.byte	95
	.word	0,0
.L103:
	.word	-1,.L36,.L143-.L36,.L144-.L36
	.half	1
	.byte	95
	.word	0,0
.L80:
	.word	0,0
.L54:
	.word	0,0
.L91:
	.word	0,0
.L50:
	.word	0,0
.L102:
	.word	0,0
.L69:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L281:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('_Core1_start')
	.sect	'.debug_frame'
	.word	20
	.word	.L281,.L36,.L46-.L36
	.byte	8,19,8,21,8,22,8,23

; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   144      /* initialize SDA base pointers */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   145      __setareg(a0, __SDATA1(1));
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   146      __setareg(a1, __SDATA2(1));
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   147  
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   148      /* These to be un commented if A8 and A9 are required to be initialised */
; ..\Libraries\BaseSw\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart1.c	   149      __setareg(a8, __SDATA3(1));
	; Module end
